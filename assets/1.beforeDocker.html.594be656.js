import{ab as e,A as a,B as r,ac as i}from"./framework.9a0a33a3.js";const o={},c=i('<h1 id="_1-历史背景" tabindex="-1"><a class="header-anchor" href="#_1-历史背景" aria-hidden="true">#</a> 1. 历史背景</h1><h2 id="_1-1-背景" tabindex="-1"><a class="header-anchor" href="#_1-1-背景" aria-hidden="true">#</a> 1.1. 背景</h2><p>曾经，每个服务器只能运行单一应用。操作系统没有相应的技术手段来保证在一台服务器上稳定而安全地同时运行多个应用。</p><p>在那个时代，经常会出现这样一幕：每次业务部门想要增加一个新的应用时，就需要IT部门去采购一个新的服务器。大部分情况下，没有人知道新增应用所需的服务器性能究竟是怎样的，这意味着IT部门需要凭借经验去猜测所购买的服务器型号和规格。因此，IT部门在采购的时候就不得不买那些性能大幅优于业务需求的服务器。毕竟无论是IT部门还是业务部门，都不想看到服务器性能不足的情况出现。因为服务器性能不足，可能会导致某些交易失败，而交易失败会使得公司客户流失、收益下降，所以IT部门通常采购的都是更大、更好的服务器。这种做法导致了大部分服务器长期运行在他们额定负载5%～10%的水平区间之内。这对公司资产和资源是一种极大的浪费！</p><h2 id="_1-2-虚拟机" tabindex="-1"><a class="header-anchor" href="#_1-2-虚拟机" aria-hidden="true">#</a> 1.2. 虚拟机</h2><p>为了解决上面的问题，VMware公司给全世界带来了一个礼物——虚拟机（VM）。然后几乎是一夜之间，世界就变得美好了！人们终于拥有了一种允许多应用能够稳定、安全地同时运行在一个服务器中的技术。</p><p>虚拟机的缺点:</p><ul><li>依赖专用的操作系统（OS）。OS会占用额外的CPU、RAM和存储，这些资源本可以用于运行更多的应用。每个OS都需要补丁和监控。另外在某些情况下，OS需要许可证才能运行。这对运营成本（OPEX）和资金性支出（CAPEX）都是一种浪费。</li><li>虚拟机启动通常比较慢</li><li>可移植性比较差</li></ul><h2 id="_1-3-容器模型" tabindex="-1"><a class="header-anchor" href="#_1-3-容器模型" aria-hidden="true">#</a> 1.3. 容器模型</h2><p>长期以来，像谷歌（Google）这样的大规模Web服务（Big Web-Scale）玩家一直采用容器（Container）技术解决虚拟机模型的缺点。</p><p>容器模型其实跟虚拟机模型相似，其主要的区别在于：</p><ul><li>容器的运行不会独占操作系统。实际上，运行在相同宿主机上的容器是共享一个操作系统的，这样就能够节省大量的系统资源，如CPU、RAM以及存储。</li><li>容器同时还能节省大量花费在许可证上的开销，以及为OS打补丁等运维成本。最终结果就是，容器节省了维护成本和资金成本。</li><li>同时容器还具有启动快和便于迁移等优势。将容器从笔记本电脑迁移到云上，之后再迁移到数据中心的虚拟机或者物理机之上，都是很简单的事情。</li></ul><p>有很多跟容器类似的操作系统虚拟化技术要早于Docker和现代容器技术出现，有些甚至可以追溯到大型机上的System/360操作系统当中。BSD Jails和Solaris Zones也是在类UNIX操作系统上众所周知的容器化技术。</p><p>Docker的出现使得Linux容器技术得到广泛应用的技术。换个角度来说，是Docker这家公司使容器变得简单。</p><p><strong>运行中的容器共享宿主机的内核</strong>，理解这一点是很重要的。这意味着一个基于Windows的容器化应用在Linux主机上是无法运行的。</p><h2 id="_1-4-docker" tabindex="-1"><a class="header-anchor" href="#_1-4-docker" aria-hidden="true">#</a> 1.4. Docker</h2><p>Docker是一种运行于Linux和Windows上的软件，用于创建、管理和编排容器。</p><p>多数技术人员在谈到Docker时，主要是指Docker引擎。Docker引擎主要有两个版本：企业版（EE）和社区版（CE）。</p><p>每个季度，企业版和社区版都会发布一个稳定版本。社区版本会提供4个月的支持，而企业版本会提供12个月的支持。</p><p>社区版还会通过Edge方式发布月度版。</p><h2 id="_1-5-容器生态" tabindex="-1"><a class="header-anchor" href="#_1-5-容器生态" aria-hidden="true">#</a> 1.5. 容器生态</h2><p>Docker公司的一个核心哲学通常被称为“<strong>含电池，但可拆卸</strong>”（Batteries included but removable）。</p><p>意思是许多Docker内置的组件都可以替换为第三方的组件。</p>',23),d=[c];function n(h,t){return a(),r("div",null,d)}const s=e(o,[["render",n],["__file","1.beforeDocker.html.vue"]]);export{s as default};
