import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as o,f as e}from"./app-b15e6a73.js";const i="/assets/1-d89b4f0b.gif",c="/assets/2-6e272d48.gif",s="/assets/2-6e272d48.gif",d="/assets/4-9e39b3d2.gif";const r={},n=e('<h1 id="四、composition-api-的优势" tabindex="-1" data-v-aac2bf26><a class="header-anchor" href="#四、composition-api-的优势" aria-hidden="true" data-v-aac2bf26>#</a> 四、Composition API 的优势</h1><h2 id="_1-options-api-存在的问题" tabindex="-1" data-v-aac2bf26><a class="header-anchor" href="#_1-options-api-存在的问题" aria-hidden="true" data-v-aac2bf26>#</a> 1.Options API 存在的问题</h2><p data-v-aac2bf26>使用传统OptionsAPI中，新增或者修改一个需求，就需要分别在data，methods，computed里修改 。</p><p data-v-aac2bf26><img src="'+i+'" alt="before" loading="lazy" data-v-aac2bf26><br data-v-aac2bf26><img src="'+c+'" alt="before edit" loading="lazy" data-v-aac2bf26></p><h2 id="_2-composition-api-的优势" tabindex="-1" data-v-aac2bf26><a class="header-anchor" href="#_2-composition-api-的优势" aria-hidden="true" data-v-aac2bf26>#</a> 2.Composition API 的优势</h2><p data-v-aac2bf26>我们可以更加优雅的组织我们的代码，函数。让相关功能的代码更加有序的组织在一起。</p><p data-v-aac2bf26><img src="'+s+'" alt="after" loading="lazy" data-v-aac2bf26><br data-v-aac2bf26><img src="'+d+'" alt="after edit" loading="lazy" data-v-aac2bf26></p>',7),p=[n];function _(f,b){return t(),o("div",null,p)}const h=a(r,[["render",_],["__scopeId","data-v-aac2bf26"],["__file","compare.html.vue"]]);export{h as default};
