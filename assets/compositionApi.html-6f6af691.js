const e=JSON.parse('{"key":"v-6d0ea2b2","path":"/framework_front/vue3/compositionApi.html","title":"二、常用 Composition API","lang":"zh-CN","frontmatter":{"article":false,"description":"二、常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到的：数据、方法等等，均要配置在setup中。 setup函数的两种返回值： 若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！） 若返回一个渲染函数：则可以自定义渲染内容。（了解） 注意点： 尽量不要与Vue2.x配置混用 Vue2.x配置（data、methos、computed...）中可以访问到setup中的属性、方法。 但在setup中不能访问到Vue2.x配置（data、methos、computed...）。 如果有重名, setup优先。 setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）","head":[["meta",{"property":"og:url","content":"https://hanekawa.top/framework_front/vue3/compositionApi.html"}],["meta",{"property":"og:site_name","content":"Kamishima-kaede"}],["meta",{"property":"og:title","content":"二、常用 Composition API"}],["meta",{"property":"og:description","content":"二、常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到的：数据、方法等等，均要配置在setup中。 setup函数的两种返回值： 若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！） 若返回一个渲染函数：则可以自定义渲染内容。（了解） 注意点： 尽量不要与Vue2.x配置混用 Vue2.x配置（data、methos、computed...）中可以访问到setup中的属性、方法。 但在setup中不能访问到Vue2.x配置（data、methos、computed...）。 如果有重名, setup优先。 setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://hanekawa.top/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-06-15T09:53:30.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"二、常用 Composition API"}],["meta",{"property":"article:modified_time","content":"2022-06-15T09:53:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"二、常用 Composition API\\",\\"description\\":\\"二、常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到的：数据、方法等等，均要配置在setup中。 setup函数的两种返回值： 若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！） 若返回一个渲染函数：则可以自定义渲染内容。（了解） 注意点： 尽量不要与Vue2.x配置混用 Vue2.x配置（data、methos、computed...）中可以访问到setup中的属性、方法。 但在setup中不能访问到Vue2.x配置（data、methos、computed...）。 如果有重名, setup优先。 setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）\\"}"]]},"headers":[{"level":1,"title":"二、常用 Composition API","slug":"二、常用-composition-api","link":"#二、常用-composition-api","children":[{"level":2,"title":"1.拉开序幕的setup","slug":"_1-拉开序幕的setup","link":"#_1-拉开序幕的setup","children":[]},{"level":2,"title":"2.ref函数","slug":"_2-ref函数","link":"#_2-ref函数","children":[]},{"level":2,"title":"3.reactive函数","slug":"_3-reactive函数","link":"#_3-reactive函数","children":[]},{"level":2,"title":"4.Vue3.0中的响应式原理","slug":"_4-vue3-0中的响应式原理","link":"#_4-vue3-0中的响应式原理","children":[{"level":3,"title":"vue2.x的响应式","slug":"vue2-x的响应式","link":"#vue2-x的响应式","children":[]},{"level":3,"title":"Vue3.0的响应式","slug":"vue3-0的响应式","link":"#vue3-0的响应式","children":[]}]},{"level":2,"title":"5.reactive对比ref","slug":"_5-reactive对比ref","link":"#_5-reactive对比ref","children":[]},{"level":2,"title":"6.setup的两个注意点","slug":"_6-setup的两个注意点","link":"#_6-setup的两个注意点","children":[]},{"level":2,"title":"7.计算属性与监视","slug":"_7-计算属性与监视","link":"#_7-计算属性与监视","children":[{"level":3,"title":"1.computed函数","slug":"_1-computed函数","link":"#_1-computed函数","children":[]},{"level":3,"title":"2.watch函数","slug":"_2-watch函数","link":"#_2-watch函数","children":[]},{"level":3,"title":"3.watchEffect函数","slug":"_3-watcheffect函数","link":"#_3-watcheffect函数","children":[]}]},{"level":2,"title":"8.生命周期","slug":"_8-生命周期","link":"#_8-生命周期","children":[]},{"level":2,"title":"9.自定义hook函数","slug":"_9-自定义hook函数","link":"#_9-自定义hook函数","children":[]},{"level":2,"title":"10.toRef","slug":"_10-toref","link":"#_10-toref","children":[]}]}],"git":{"createdTime":1655200609000,"updatedTime":1655286810000,"contributors":[{"name":"shiki","email":"kamiacgxu@gmail.com","commits":2}]},"readingTime":{"minutes":6.74,"words":2022},"filePathRelative":"framework_front/vue3/compositionApi.md","localizedDate":"2022年6月14日","excerpt":"<h1> 二、常用 Composition API</h1>\\n<p>官方文档: <a href=\\"https://v3.cn.vuejs.org/guide/composition-api-introduction.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://v3.cn.vuejs.org/guide/composition-api-introduction.html</a></p>\\n<h2> 1.拉开序幕的setup</h2>\\n<ol>\\n<li>理解：Vue3.0中一个新的配置项，值为一个函数。</li>\\n<li>setup是所有<strong style=\\"color:#DD5145\\">Composition API（组合API）</strong><i style=\\"color:gray;font-weight:bold\\">“ 表演的舞台 ”</i>。</li>\\n<li>组件中所用到的：数据、方法等等，均要配置在setup中。</li>\\n<li>setup函数的两种返回值：\\n<ol>\\n<li>若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！）</li>\\n<li><span style=\\"color:#aad\\">若返回一个渲染函数：则可以自定义渲染内容。（了解）</span></li>\\n</ol>\\n</li>\\n<li>注意点：\\n<ol>\\n<li>尽量不要与Vue2.x配置混用\\n<ul>\\n<li>Vue2.x配置（data、methos、computed...）中<strong style=\\"color:#DD5145\\">可以访问到</strong>setup中的属性、方法。</li>\\n<li>但在setup中<strong style=\\"color:#DD5145\\">不能访问到</strong>Vue2.x配置（data、methos、computed...）。</li>\\n<li>如果有重名, setup优先。</li>\\n</ul>\\n</li>\\n<li>setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）</li>\\n</ol>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
