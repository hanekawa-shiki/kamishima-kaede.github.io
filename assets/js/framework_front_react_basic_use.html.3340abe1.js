"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[1359],{3277:(s,n,a)=>{a.r(n),a.d(n,{comp:()=>t,data:()=>r});var l=a(9034);const p=a.p+"assets/img/life_cycle_old.33b56c91.png",e=a.p+"assets/img/life_cycle_new.b2dda883.png",o=[(0,l.Fv)('<h1 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用"><span>基本使用</span></a></h1><h2 id="虚拟dom" tabindex="-1"><a class="header-anchor" href="#虚拟dom"><span>虚拟<code>DOM</code></span></a></h2><p>虚拟 DOM 的两种创建方式:</p><p>1.使用 jsx 创建</p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> VDOM</span><span style="color:#616E88;"> /* 此处一定不要写引号，因为不是字符串 */</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">  &lt;h1</span><span style="color:#8FBCBB;"> id</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">title</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">    &lt;span&gt;</span><span style="color:#D8DEE9FF;">Hello,React</span><span style="color:#81A1C1;">&lt;/span&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">  &lt;/h1&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.使用<code>React</code>提供的<code>createElement</code>方法创建</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> VDOM</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">createElement</span><span style="color:#D8DEE9FF;">(</span></span>\n<span class="line"><span style="color:#ECEFF4;">  &quot;</span><span style="color:#A3BE8C;">h1</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#ECEFF4;">  {</span><span style="color:#88C0D0;"> id</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">title</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> },</span></span>\n<span class="line"><span style="color:#D8DEE9;">  React</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">createElement</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">span</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {},</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Hello,React</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于虚拟<code>DOM</code><br> 1.本质是<code>Object</code>类型的对象（一般对象）<br> 2.虚拟<code>DOM</code>比较“轻”，真实<code>DOM</code>比较“重”，因为虚拟<code>DOM</code>是<code>React</code>内部在用，无需真实<code>DOM</code>上那么多的属性。<br> 3.虚拟<code>DOM</code>最终会被<code>React</code>转化为真实<code>DOM</code>，呈现在页面上。</p><h2 id="jsx的基本语法规则" tabindex="-1"><a class="header-anchor" href="#jsx的基本语法规则"><span><code>jsx</code>的基本语法规则</span></a></h2><p>1.定义虚拟DOM时，不要写引号。<br> 2.标签中混入JS表达式时要用{}。<br> 3.样式的类名指定不要用class，要用className。<br> 4.内联样式，要用<code>style={{key:value}}</code>的形式去写。<br> 5.只有一个根标签<br> 6.标签必须闭合<br> 7.标签首字母<br> (1).若小写字母开头，则将该标签转为html中同名元素，若html中无该标签对应的同名元素，则报错。<br> (2).若大写字母开头，react就去渲染对应的组件，若组件没有定义，则报错。</p><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件"><span>组件</span></a></h2><p>1.函数式组件</p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//1.创建函数式组件</span></span>\n<span class="line"><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> MyComponent</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#81A1C1;"> &lt;h2&gt;</span><span style="color:#D8DEE9FF;">我是用函数定义的组件(适用于【简单组件】的定义)</span><span style="color:#81A1C1;">&lt;/h2&gt;;</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#616E88;">//2.渲染组件到页面</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">MyComponent</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">/* </span></span>\n<span class="line"><span style="color:#616E88;">执行了ReactDOM.render(&lt;MyComponent/&gt;.......之后，发生了什么？</span></span>\n<span class="line"><span style="color:#616E88;">    1.React解析组件标签，找到了MyComponent组件。</span></span>\n<span class="line"><span style="color:#616E88;">    2.发现组件是使用函数定义的，随后调用该函数，将返回的虚拟DOM转为真实DOM，随后呈现在页面中。</span></span>\n<span class="line"><span style="color:#616E88;">*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.类组件</p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//1.创建类式组件</span></span>\n<span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> MyComponent</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">    //render是放在哪里的？—— MyComponent的原型对象上，供实例使用。</span></span>\n<span class="line"><span style="color:#616E88;">    //render中的this是谁？—— MyComponent的实例对象 &lt;=&gt; MyComponent组件实例对象。</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#81A1C1;"> &lt;h2&gt;</span><span style="color:#D8DEE9FF;">我是用类定义的组件(适用于【复杂组件】的定义)</span><span style="color:#81A1C1;">&lt;/h2&gt;;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#616E88;">//2.渲染组件到页面</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">MyComponent</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">/* </span></span>\n<span class="line"><span style="color:#616E88;">  执行了ReactDOM.render(&lt;MyComponent/&gt;.......之后，发生了什么？</span></span>\n<span class="line"><span style="color:#616E88;">      1.React解析组件标签，找到了MyComponent组件。</span></span>\n<span class="line"><span style="color:#616E88;">      2.发现组件是使用类定义的，随后new出来该类的实例，并通过该实例调用到原型上的render方法。</span></span>\n<span class="line"><span style="color:#616E88;">      3.将render返回的虚拟DOM转为真实DOM，随后呈现在页面中。</span></span>\n<span class="line"><span style="color:#616E88;">*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件实例属性之-state" tabindex="-1"><a class="header-anchor" href="#组件实例属性之-state"><span>组件实例属性之:<code>state</code></span></a></h2><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//1.创建组件</span></span>\n<span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Weather</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">  //构造器调用几次？ ———— 1次</span></span>\n<span class="line"><span style="color:#81A1C1;">  constructor</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">props</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">constructor</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">    super</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">props</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">    //初始化状态</span></span>\n<span class="line"><span style="color:#81A1C1;">    this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span><span style="color:#88C0D0;"> isHot</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> false</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> wind</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">微风</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">    //解决changeWeather中this指向问题</span></span>\n<span class="line"><span style="color:#81A1C1;">    this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">changeWeather</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">changeWeather</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">bind</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">this</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //render调用几次？ ———— 1+n次 1是初始化的那次 n是状态更新的次数</span></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">render</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">    //读取状态</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> isHot</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> wind</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;h1</span><span style="color:#8FBCBB;"> onClick</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">changeWeather</span><span style="color:#81A1C1;">}&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        今天天气很</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">isHot</span><span style="color:#81A1C1;"> ?</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">炎热</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> :</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">凉爽</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">}</span><span style="color:#D8DEE9FF;">，</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">wind</span><span style="color:#81A1C1;">}</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/h1&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //changeWeather调用几次？ ———— 点几次调几次</span></span>\n<span class="line"><span style="color:#88C0D0;">  changeWeather</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">    //changeWeather放在哪里？ ———— Weather的原型对象上，供实例使用</span></span>\n<span class="line"><span style="color:#616E88;">    //由于changeWeather是作为onClick的回调，所以不是通过实例调用的，是直接调用</span></span>\n<span class="line"><span style="color:#616E88;">    //类中的方法默认开启了局部的严格模式，所以changeWeather中的this为undefined</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">changeWeather</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">    //获取原来的isHot值</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#D8DEE9;"> isHot</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">isHot</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">    //严重注意：状态必须通过setState进行更新,且更新是一种合并，不是替换。</span></span>\n<span class="line"><span style="color:#81A1C1;">    this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setState</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> isHot</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> !</span><span style="color:#D8DEE9;">isHot</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">this</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">    //严重注意：状态(state)不可直接更改，下面这行就是直接更改！！！</span></span>\n<span class="line"><span style="color:#616E88;">    //this.state.isHot = !isHot //这是错误的写法</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#616E88;">//2.渲染组件到页面</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">Weather</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生产开发中简写:</p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//1.创建组件</span></span>\n<span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Weather</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">  //初始化状态</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  state </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span><span style="color:#88C0D0;"> isHot</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> false</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> wind</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">微风</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> isHot</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> wind</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;h1</span><span style="color:#8FBCBB;"> onClick</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">changeWeather</span><span style="color:#81A1C1;">}&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        今天天气很</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">isHot</span><span style="color:#81A1C1;"> ?</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">炎热</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> :</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">凉爽</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">}</span><span style="color:#D8DEE9FF;">，</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">wind</span><span style="color:#81A1C1;">}</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/h1&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //自定义方法————要用赋值语句的形式+箭头函数</span></span>\n<span class="line"><span style="color:#88C0D0;">  changeWeather</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> ()</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#D8DEE9;"> isHot</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">isHot</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">    this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setState</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> isHot</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> !</span><span style="color:#D8DEE9;">isHot</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#616E88;">//2.渲染组件到页面</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">Weather</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意点:</p><ul><li>1.render方法中的this为组件实例对象</li><li>2.组件中自定义方法中this为undefined解决方式: <ul><li>1)bind改变this指向</li><li>2)使用赋值语句+箭头函数方式</li></ul></li><li>3.状态数据不能直接修改或更新</li></ul><h2 id="组件实例属性之-props" tabindex="-1"><a class="header-anchor" href="#组件实例属性之-props"><span>组件实例属性之:<code>props</code></span></a></h2><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//创建组件</span></span>\n<span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Person</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> name</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> age</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> sex</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">props</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;ul&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;li&gt;</span><span style="color:#D8DEE9FF;">姓名：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;li&gt;</span><span style="color:#D8DEE9FF;">性别：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">sex</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;li&gt;</span><span style="color:#D8DEE9FF;">年龄：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">age</span><span style="color:#81A1C1;"> +</span><span style="color:#B48EAD;"> 1</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/ul&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">//对标签属性进行类型、必要性的限制</span></span>\n<span class="line"><span style="color:#D8DEE9;">Person</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">propTypes</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">  name</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">string</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">isRequired</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制name必传，且为字符串</span></span>\n<span class="line"><span style="color:#88C0D0;">  sex</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制sex为字符串</span></span>\n<span class="line"><span style="color:#88C0D0;">  age</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">number</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制age为数值</span></span>\n<span class="line"><span style="color:#88C0D0;">  speak</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">func</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制speak为函数</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">//指定默认标签属性值</span></span>\n<span class="line"><span style="color:#D8DEE9;">Person</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">defaultProps</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">  sex</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">男</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //sex默认值为男</span></span>\n<span class="line"><span style="color:#88C0D0;">  age</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 18</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //age默认值为18</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">//渲染组件到页面</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span></span>\n<span class="line"><span style="color:#81A1C1;">  &lt;</span><span style="color:#8FBCBB;">Person</span><span style="color:#8FBCBB;"> name</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">jerry</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> age</span><span style="color:#81A1C1;">={</span><span style="color:#B48EAD;">19</span><span style="color:#81A1C1;">}</span><span style="color:#8FBCBB;"> sex</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">男</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9;">  document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test1</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span></span>\n<span class="line"><span style="color:#81A1C1;">  &lt;</span><span style="color:#8FBCBB;">Person</span><span style="color:#8FBCBB;"> name</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">tom</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> age</span><span style="color:#81A1C1;">={</span><span style="color:#B48EAD;">18</span><span style="color:#81A1C1;">}</span><span style="color:#8FBCBB;"> sex</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">女</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9;">  document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test2</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> p</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span><span style="color:#88C0D0;"> name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">老刘</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> age</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 18</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> sex</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">女</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">Person</span><span style="color:#81A1C1;"> {...</span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;">}</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test3</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简写</p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//创建组件</span></span>\n<span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Person</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">  constructor</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">props</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">    //构造器是否接收props，是否传递给super，取决于：是否希望在构造器中通过this访问props</span></span>\n<span class="line"><span style="color:#81A1C1;">    super</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">props</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">constructor</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">props</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //对标签属性进行类型、必要性的限制</span></span>\n<span class="line"><span style="color:#81A1C1;">  static</span><span style="color:#D8DEE9FF;"> propTypes </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">    name</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">string</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">isRequired</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制name必传，且为字符串</span></span>\n<span class="line"><span style="color:#88C0D0;">    sex</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制sex为字符串</span></span>\n<span class="line"><span style="color:#88C0D0;">    age</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">number</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制age为数值</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //指定默认标签属性值</span></span>\n<span class="line"><span style="color:#81A1C1;">  static</span><span style="color:#D8DEE9FF;"> defaultProps </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">    sex</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">男</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //sex默认值为男</span></span>\n<span class="line"><span style="color:#88C0D0;">    age</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 18</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //age默认值为18</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">    // console.log(this);</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> name</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> age</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> sex</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">props</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">    //props是只读的</span></span>\n<span class="line"><span style="color:#616E88;">    //this.props.name = &#39;jack&#39; //此行代码会报错，因为props是只读的</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;ul&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;li&gt;</span><span style="color:#D8DEE9FF;">姓名：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;li&gt;</span><span style="color:#D8DEE9FF;">性别：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">sex</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;li&gt;</span><span style="color:#D8DEE9FF;">年龄：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">age</span><span style="color:#81A1C1;"> +</span><span style="color:#B48EAD;"> 1</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/ul&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">//渲染组件到页面</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">Person</span><span style="color:#8FBCBB;"> name</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">jerry</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test1</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>函数组件使用<code>props</code></p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//创建组件</span></span>\n<span class="line"><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> Person</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">props</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">  const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> name</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> age</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> sex</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> props</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">    &lt;ul&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;li&gt;</span><span style="color:#D8DEE9FF;">姓名：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;li&gt;</span><span style="color:#D8DEE9FF;">性别：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">sex</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;li&gt;</span><span style="color:#D8DEE9FF;">年龄：</span><span style="color:#81A1C1;">{</span><span style="color:#D8DEE9;">age</span><span style="color:#81A1C1;">}&lt;/li&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">    &lt;/ul&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  )</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9;">Person</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">propTypes</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">  name</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">string</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">isRequired</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制name必传，且为字符串</span></span>\n<span class="line"><span style="color:#88C0D0;">  sex</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制sex为字符串</span></span>\n<span class="line"><span style="color:#88C0D0;">  age</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> PropTypes</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">number</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //限制age为数值</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">//指定默认标签属性值</span></span>\n<span class="line"><span style="color:#D8DEE9;">Person</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">defaultProps</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">  sex</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">男</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //sex默认值为男</span></span>\n<span class="line"><span style="color:#88C0D0;">  age</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 18</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //age默认值为18</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">//渲染组件到页面</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">Person</span><span style="color:#8FBCBB;"> name</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">jerry</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">test1</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件实例属性之-refs" tabindex="-1"><a class="header-anchor" href="#组件实例属性之-refs"><span>组件实例属性之:<code>refs</code></span></a></h2><p>使用<code>ref</code>的三种方式:<br> 1.字符串形式</p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//创建组件</span></span>\n<span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Demo</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;div&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;input</span><span style="color:#8FBCBB;"> ref</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">input1</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> placeholder</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">点击按钮提示数据</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.回调函数形式</p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Demo</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">  //展示左侧输入框的数据</span></span>\n<span class="line"><span style="color:#88C0D0;">  showData</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> ()</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> input1</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this;</span></span>\n<span class="line"><span style="color:#88C0D0;">    alert</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">input1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">  //展示右侧输入框的数据</span></span>\n<span class="line"><span style="color:#88C0D0;">  showData2</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> ()</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> input2</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this;</span></span>\n<span class="line"><span style="color:#88C0D0;">    alert</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">input2</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;div&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;input</span></span>\n<span class="line"><span style="color:#8FBCBB;">          ref</span><span style="color:#81A1C1;">={</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">input1</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> c</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">}</span></span>\n<span class="line"><span style="color:#8FBCBB;">          type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#8FBCBB;">          placeholder</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">点击按钮提示数据</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#81A1C1;">        /&gt;</span></span>\n<span class="line"><span style="color:#ECEFF4;">        &amp;</span><span style="color:#EBCB8B;">nbsp</span><span style="color:#ECEFF4;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;button</span><span style="color:#8FBCBB;"> onClick</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">showData</span><span style="color:#81A1C1;">}&gt;</span><span style="color:#D8DEE9FF;">点我提示左侧的数据</span><span style="color:#81A1C1;">&lt;/button&gt;</span><span style="color:#ECEFF4;">&amp;</span><span style="color:#EBCB8B;">nbsp</span><span style="color:#ECEFF4;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;input</span></span>\n<span class="line"><span style="color:#8FBCBB;">          onBlur</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">showData2</span><span style="color:#81A1C1;">}</span></span>\n<span class="line"><span style="color:#8FBCBB;">          ref</span><span style="color:#81A1C1;">={</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">input2</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> c</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">}</span></span>\n<span class="line"><span style="color:#8FBCBB;">          type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#8FBCBB;">          placeholder</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">失去焦点提示数据</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#81A1C1;">        /&gt;</span></span>\n<span class="line"><span style="color:#ECEFF4;">        &amp;</span><span style="color:#EBCB8B;">nbsp</span><span style="color:#ECEFF4;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意:回调<code>ref</code>中回调执行次数的问题<br> 如果<code>ref</code>回调函数是以内联函数的方式定义的，在更新过程中它会被执行两次，第一次传入参数<code>null</code>，然后第二次会传入参数<code>DOM</code>元素。这是因为在每次渲染时会创建一个新的函数实例，所以<code>React</code>清空旧的<code>ref</code>并且设置新的。通过将<code>ref</code>的回调函数定义成<code>class</code>的绑定函数的方式可以避免上述问题，但是大多数情况下它是无关紧要的。</p><p>3.<code>createRef</code></p><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Demo</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">/* </span></span>\n<span class="line"><span style="color:#616E88;">  React.createRef调用后可以返回一个容器，该容器可以存储被ref所标识的节点,该容器是“专人专用”的</span></span>\n<span class="line"><span style="color:#616E88;">*/</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  myRef </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">createRef</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  myRef2 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">createRef</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">  //展示左侧输入框的数据</span></span>\n<span class="line"><span style="color:#88C0D0;">  showData</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> ()</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">    alert</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">myRef</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">current</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#616E88;">  //展示右侧输入框的数据</span></span>\n<span class="line"><span style="color:#88C0D0;">  showData2</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> ()</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">    alert</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">myRef2</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">current</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;"> (</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;div&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;input</span><span style="color:#8FBCBB;"> ref</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">myRef</span><span style="color:#81A1C1;">}</span><span style="color:#8FBCBB;"> type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> placeholder</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">点击按钮提示数据</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span></span>\n<span class="line"><span style="color:#ECEFF4;">        &amp;</span><span style="color:#EBCB8B;">nbsp</span><span style="color:#ECEFF4;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;button</span><span style="color:#8FBCBB;"> onClick</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">showData</span><span style="color:#81A1C1;">}&gt;</span><span style="color:#D8DEE9FF;">点我提示左侧的数据</span><span style="color:#81A1C1;">&lt;/button&gt;</span><span style="color:#ECEFF4;">&amp;</span><span style="color:#EBCB8B;">nbsp</span><span style="color:#ECEFF4;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;input</span></span>\n<span class="line"><span style="color:#8FBCBB;">          onBlur</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">showData2</span><span style="color:#81A1C1;">}</span></span>\n<span class="line"><span style="color:#8FBCBB;">          ref</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">myRef2</span><span style="color:#81A1C1;">}</span></span>\n<span class="line"><span style="color:#8FBCBB;">          type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#8FBCBB;">          placeholder</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">失去焦点提示数据</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#81A1C1;">        /&gt;</span></span>\n<span class="line"><span style="color:#ECEFF4;">        &amp;</span><span style="color:#EBCB8B;">nbsp</span><span style="color:#ECEFF4;">;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件处理" tabindex="-1"><a class="header-anchor" href="#事件处理"><span>事件处理</span></a></h2><p>(1).通过onXxx属性指定事件处理函数(注意大小写)<br> a.React使用的是自定义(合成)事件, 而不是使用的原生DOM事件 ---- 为了更好的兼容性<br> b.React中的事件是通过事件委托方式处理的(委托给组件最外层的元素) ---- 为了的高效<br> (2).通过event.target得到发生事件的DOM元素对象 ---- 不要过度使用ref</p><h2 id="受控组件与非受控组件" tabindex="-1"><a class="header-anchor" href="#受控组件与非受控组件"><span>受控组件与非受控组件</span></a></h2><p>一言以概:组件的状态由代码管理为受控组件,反之为非受控.<br> 可以参考<a href="https://zh-hans.reactjs.org/docs/uncontrolled-components.html" target="_blank" rel="noopener noreferrer">官网案例</a></p><h2 id="高阶函数" tabindex="-1"><a class="header-anchor" href="#高阶函数"><span>高阶函数</span></a></h2><p>高阶函数：如果一个函数符合下面2个规范中的任何一个，那该函数就是高阶函数。<br> 1.若A函数，接收的参数是一个函数，那么A就可以称之为高阶函数。<br> 2.若A函数，调用的返回值依然是一个函数，那么A就可以称之为高阶函数。<br> 常见的高阶函数有：Promise、setTimeout、arr.map()等等。</p><p>函数的柯里化：通过函数调用继续返回函数的方式，实现多次接收参数最后统一处理的函数编码形式。</p><p>React中可以使用此概念进行,事件处理的回调函数传参。</p><p>使用函数柯里化:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Login</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#616E88;">  //初始化状态</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  state </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">    username</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;">&#39;&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //用户名</span></span>\n<span class="line"><span style="color:#88C0D0;">    password</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;">&#39;&#39;</span><span style="color:#616E88;"> //密码</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //保存表单数据到状态中</span></span>\n<span class="line"><span style="color:#88C0D0;">  saveFormData</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">dataType</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">=&gt;</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">=&gt;</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#81A1C1;">      this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setState</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;">[</span><span style="color:#D8DEE9;">dataType</span><span style="color:#88C0D0;">]</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">target</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#ECEFF4;">    }</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //表单提交的回调</span></span>\n<span class="line"><span style="color:#88C0D0;">  handleSubmit</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">=&gt;</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9;">    event</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">preventDefault</span><span style="color:#D8DEE9FF;">() </span><span style="color:#616E88;">//阻止表单提交</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;">username</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">password</span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span></span>\n<span class="line"><span style="color:#88C0D0;">    alert</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">`</span><span style="color:#A3BE8C;">你输入的用户名是：</span><span style="color:#81A1C1;">${</span><span style="color:#D8DEE9;">username</span><span style="color:#81A1C1;">}</span><span style="color:#A3BE8C;">,你输入的密码是：</span><span style="color:#81A1C1;">${</span><span style="color:#D8DEE9;">password</span><span style="color:#81A1C1;">}</span><span style="color:#ECEFF4;">`</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">(){</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;">(</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;form</span><span style="color:#8FBCBB;"> onSubmit</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">handleSubmit</span><span style="color:#81A1C1;">}&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        用户名：</span><span style="color:#81A1C1;">&lt;input</span><span style="color:#8FBCBB;"> onChange</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">saveFormData</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">username</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">}</span><span style="color:#8FBCBB;"> type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> name</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">username</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">/&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        密码：</span><span style="color:#81A1C1;">&lt;input</span><span style="color:#8FBCBB;"> onChange</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">saveFormData</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">password</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">}</span><span style="color:#8FBCBB;"> type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">password</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> name</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">password</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">/&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;button&gt;</span><span style="color:#D8DEE9FF;">登录</span><span style="color:#81A1C1;">&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/form&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不使用函数柯里化的实现:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> Login</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#616E88;">  //初始化状态</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  state </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#88C0D0;">    username</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;">&#39;&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> //用户名</span></span>\n<span class="line"><span style="color:#88C0D0;">    password</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;">&#39;&#39;</span><span style="color:#616E88;"> //密码</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //保存表单数据到状态中</span></span>\n<span class="line"><span style="color:#88C0D0;">  saveFormData</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">dataType</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">=&gt;</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#81A1C1;">    this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setState</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;">[</span><span style="color:#D8DEE9;">dataType</span><span style="color:#88C0D0;">]</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">target</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">  //表单提交的回调</span></span>\n<span class="line"><span style="color:#88C0D0;">  handleSubmit</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">=&gt;</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9;">    event</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">preventDefault</span><span style="color:#D8DEE9FF;">() </span><span style="color:#616E88;">//阻止表单提交</span></span>\n<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;">username</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">password</span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span></span>\n<span class="line"><span style="color:#88C0D0;">    alert</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">`</span><span style="color:#A3BE8C;">你输入的用户名是：</span><span style="color:#81A1C1;">${</span><span style="color:#D8DEE9;">username</span><span style="color:#81A1C1;">}</span><span style="color:#A3BE8C;">,你输入的密码是：</span><span style="color:#81A1C1;">${</span><span style="color:#D8DEE9;">password</span><span style="color:#81A1C1;">}</span><span style="color:#ECEFF4;">`</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">(){</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;">(</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;form</span><span style="color:#8FBCBB;"> onSubmit</span><span style="color:#81A1C1;">={this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">handleSubmit</span><span style="color:#81A1C1;">}&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        用户名：</span><span style="color:#81A1C1;">&lt;input</span><span style="color:#8FBCBB;"> onChange</span><span style="color:#81A1C1;">={</span><span style="color:#D8DEE9;">event</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">saveFormData</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">username</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">event</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">}</span><span style="color:#8FBCBB;"> type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> name</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">username</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">/&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        密码：</span><span style="color:#81A1C1;">&lt;input</span><span style="color:#8FBCBB;"> onChange</span><span style="color:#81A1C1;">={</span><span style="color:#D8DEE9;">event</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">saveFormData</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">password</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">event</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">}</span><span style="color:#8FBCBB;"> type</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">password</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> name</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">password</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">/&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        &lt;button&gt;</span><span style="color:#D8DEE9FF;">登录</span><span style="color:#81A1C1;">&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/form&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生命周期函数" tabindex="-1"><a class="header-anchor" href="#生命周期函数"><span>生命周期函数</span></a></h2><p>旧版生命周期函数:<br><img src="'+p+'" alt="旧版生命周期函数" loading="lazy"></p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">1.</span><span style="color:#D8DEE9FF;"> 初始化阶段: 由ReactDOM.render()触发---初次渲染</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  1.constructor()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  2.componentWillMount()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  3.render()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  4.componentDidMount() =====&gt; 常用</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    一般在这个钩子中做一些初始化的事，例如：开启定时器、发送网络请求、订阅消息</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">2.</span><span style="color:#D8DEE9FF;"> 更新阶段: 由组件内部this.setSate()或父组件render触发</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  1.shouldComponentUpdate()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  2.componentWillUpdate()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  3.render() =====&gt; 必须使用的一个</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  4.componentDidUpdate()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">3.</span><span style="color:#D8DEE9FF;"> 卸载组件: 由ReactDOM.unmountComponentAtNode()触发</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  1.componentWillUnmount()  =====&gt; 常用</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    一般在这个钩子中做一些收尾的事，例如：关闭定时器、取消订阅消息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新版生命周期函数:<br><img src="'+e+'" alt="新版生命周期函数" loading="lazy"></p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">1.</span><span style="color:#D8DEE9FF;"> 初始化阶段: 由ReactDOM.render()触发---初次渲染</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  1.constructor()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  2.getDerivedStateFromProps </span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  3.render()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  4.componentDidMount() =====&gt; 常用</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    一般在这个钩子中做一些初始化的事，例如：开启定时器、发送网络请求、订阅消息</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">2.</span><span style="color:#D8DEE9FF;"> 更新阶段: 由组件内部this.setSate()或父组件重新render触发</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  1.getDerivedStateFromProps</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  2.shouldComponentUpdate()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  3.render()</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  4.getSnapshotBeforeUpdate</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  5.componentDidUpdate()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">3.</span><span style="color:#D8DEE9FF;"> 卸载组件: 由ReactDOM.unmountComponentAtNode()触发</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  1.componentWillUnmount()  =====&gt; 常用</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    一般在这个钩子中做一些收尾的事，例如：关闭定时器、取消订阅消息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getsnapshotbeforeupdate-使用场景" tabindex="-1"><a class="header-anchor" href="#getsnapshotbeforeupdate-使用场景"><span><code>getSnapshotBeforeUpdate</code> 使用场景</span></a></h3><p><a href="https://zh-hans.reactjs.org/docs/react-component.html#getsnapshotbeforeupdate" target="_blank" rel="noopener noreferrer">官网案例</a></p><p>此用法并不常见，但它可能出现在 UI 处理中，如需要以特殊方式处理滚动位置的聊天线程等。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">class</span><span style="color:#8FBCBB;"> NewsList</span><span style="color:#81A1C1;"> extends</span><span style="color:#D8DEE9FF;"> React</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;font-weight:bold;">Component</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9FF;">  state </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span><span style="color:#88C0D0;">newsArr</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;">[]</span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88C0D0;">  componentDidMount</span><span style="color:#ECEFF4;">(){</span></span>\n<span class="line"><span style="color:#88C0D0;">    setInterval</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#ECEFF4;"> {</span></span>\n<span class="line"><span style="color:#616E88;">      //获取原状态</span></span>\n<span class="line"><span style="color:#81A1C1;">      const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;">newsArr</span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span></span>\n<span class="line"><span style="color:#616E88;">      //模拟一条新闻</span></span>\n<span class="line"><span style="color:#81A1C1;">      const</span><span style="color:#D8DEE9;"> news</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">新闻</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">newsArr</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length</span><span style="color:#81A1C1;">+</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#616E88;">      //更新状态</span></span>\n<span class="line"><span style="color:#81A1C1;">      this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setState</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;">newsArr</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">news</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">...</span><span style="color:#D8DEE9;">newsArr</span><span style="color:#D8DEE9FF;">]</span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#ECEFF4;">    },</span><span style="color:#B48EAD;"> 1000</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88C0D0;">  getSnapshotBeforeUpdate</span><span style="color:#ECEFF4;">(){</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">refs</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">list</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">scrollHeight</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88C0D0;">  componentDidUpdate</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">preProps</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">preState</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">height</span><span style="color:#ECEFF4;">){</span></span>\n<span class="line"><span style="color:#81A1C1;">    this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">refs</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">list</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">scrollTop</span><span style="color:#81A1C1;"> +=</span><span style="color:#81A1C1;"> this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">refs</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">list</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">scrollHeight</span><span style="color:#81A1C1;"> -</span><span style="color:#D8DEE9;"> height</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88C0D0;">  render</span><span style="color:#ECEFF4;">(){</span></span>\n<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9FF;">(</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;div</span><span style="color:#8FBCBB;"> className</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">list</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> ref</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">list</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">        {</span></span>\n<span class="line"><span style="color:#81A1C1;">          this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">state</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">newsArr</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">map</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">n</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">=&gt;</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#81A1C1;">            return</span><span style="color:#81A1C1;"> &lt;div</span><span style="color:#8FBCBB;"> key</span><span style="color:#81A1C1;">={</span><span style="color:#D8DEE9;">index</span><span style="color:#81A1C1;">}</span><span style="color:#8FBCBB;"> className</span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">news</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;{</span><span style="color:#D8DEE9;">n</span><span style="color:#81A1C1;">}&lt;/div&gt;</span></span>\n<span class="line"><span style="color:#ECEFF4;">          }</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#81A1C1;">        }</span></span>\n<span class="line"><span style="color:#81A1C1;">      &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    )</span></span>\n<span class="line"><span style="color:#ECEFF4;">  }</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9;">ReactDOM</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">render</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">NewsList</span><span style="color:#81A1C1;">/&gt;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getElementById</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">test</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="key-的作用" tabindex="-1"><a class="header-anchor" href="#key-的作用"><span><code>key</code> 的作用</span></a></h2><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">经典面试题:</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  1). react/vue中的key有什么作用？（key的内部原理是什么？）</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  2). 为什么遍历列表时，key最好不要用index?</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span></span>\n<span class="line"><span style="color:#ECEFF4;">  1.</span><span style="color:#D8DEE9FF;"> 虚拟DOM中key的作用：</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      1). 简单的说: key是虚拟DOM对象的标识, 在更新显示时key起着极其重要的作用。</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      2). 详细的说: 当状态中的数据发生变化时，react会根据【新数据】生成【新的虚拟DOM】, </span></span>\n<span class="line"><span style="color:#D8DEE9FF;">                    随后React进行【新虚拟DOM】与【旧虚拟DOM】的diff比较，比较规则如下：</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">              a. 旧虚拟DOM中找到了与新虚拟DOM相同的key：</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">                    (1).若虚拟DOM中内容没变, 直接使用之前的真实DOM</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">                    (2).若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">              b. 旧虚拟DOM中未找到与新虚拟DOM相同的key</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">                    根据数据创建新的真实DOM，随后渲染到到页面</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">              </span></span>\n<span class="line"><span style="color:#ECEFF4;">  2.</span><span style="color:#D8DEE9FF;"> 用index作为key可能会引发的问题：</span></span>\n<span class="line"><span style="color:#ECEFF4;">        1.</span><span style="color:#D8DEE9FF;"> 若对数据进行：逆序添加、逆序删除等破坏顺序操作:</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">                会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。</span></span>\n<span class="line"><span style="color:#ECEFF4;">        2.</span><span style="color:#D8DEE9FF;"> 如果结构中还包含输入类的DOM：</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">                会产生错误DOM更新 ==&gt; 界面有问题。</span></span>\n<span class="line"><span style="color:#ECEFF4;">        3.</span><span style="color:#D8DEE9FF;"> 注意！如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">          仅用于渲染列表用于展示，使用index作为key是没有问题的。</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span></span>\n<span class="line"><span style="color:#ECEFF4;">  3.</span><span style="color:#D8DEE9FF;"> 开发中如何选择key?:</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        1.最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        2.如果确定只是简单的展示数据，用index也是可以的。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',58)],c={},t=(0,a(8538).A)(c,[["render",function(s,n){return(0,l.uX)(),(0,l.CE)("div",null,o)}]]),r=JSON.parse('{"path":"/framework_front/react/basic_use.html","title":"基本使用","lang":"zh-CN","frontmatter":{"article":false,"description":"基本使用 虚拟DOM 虚拟 DOM 的两种创建方式: 1.使用 jsx 创建 2.使用React提供的createElement方法创建 关于虚拟DOM 1.本质是Object类型的对象（一般对象） 2.虚拟DOM比较“轻”，真实DOM比较“重”，因为虚拟DOM是React内部在用，无需真实DOM上那么多的属性。 3.虚拟DOM最终会被React转化为...","head":[["meta",{"property":"og:url","content":"https://hanekawa.top/framework_front/react/basic_use.html"}],["meta",{"property":"og:site_name","content":"hanekawa-shiki"}],["meta",{"property":"og:title","content":"基本使用"}],["meta",{"property":"og:description","content":"基本使用 虚拟DOM 虚拟 DOM 的两种创建方式: 1.使用 jsx 创建 2.使用React提供的createElement方法创建 关于虚拟DOM 1.本质是Object类型的对象（一般对象） 2.虚拟DOM比较“轻”，真实DOM比较“重”，因为虚拟DOM是React内部在用，无需真实DOM上那么多的属性。 3.虚拟DOM最终会被React转化为..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-06-15T09:53:30.000Z"}],["meta",{"property":"article:author","content":"hanekawa-shiki"}],["meta",{"property":"article:modified_time","content":"2022-06-15T09:53:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"基本使用\\",\\"description\\":\\"基本使用 虚拟DOM 虚拟 DOM 的两种创建方式: 1.使用 jsx 创建 2.使用React提供的createElement方法创建 关于虚拟DOM 1.本质是Object类型的对象（一般对象） 2.虚拟DOM比较“轻”，真实DOM比较“重”，因为虚拟DOM是React内部在用，无需真实DOM上那么多的属性。 3.虚拟DOM最终会被React转化为...\\"}"]]},"headers":[{"level":2,"title":"虚拟DOM","slug":"虚拟dom","link":"#虚拟dom","children":[]},{"level":2,"title":"jsx的基本语法规则","slug":"jsx的基本语法规则","link":"#jsx的基本语法规则","children":[]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[]},{"level":2,"title":"组件实例属性之:state","slug":"组件实例属性之-state","link":"#组件实例属性之-state","children":[]},{"level":2,"title":"组件实例属性之:props","slug":"组件实例属性之-props","link":"#组件实例属性之-props","children":[]},{"level":2,"title":"组件实例属性之:refs","slug":"组件实例属性之-refs","link":"#组件实例属性之-refs","children":[]},{"level":2,"title":"事件处理","slug":"事件处理","link":"#事件处理","children":[]},{"level":2,"title":"受控组件与非受控组件","slug":"受控组件与非受控组件","link":"#受控组件与非受控组件","children":[]},{"level":2,"title":"高阶函数","slug":"高阶函数","link":"#高阶函数","children":[]},{"level":2,"title":"生命周期函数","slug":"生命周期函数","link":"#生命周期函数","children":[{"level":3,"title":"getSnapshotBeforeUpdate 使用场景","slug":"getsnapshotbeforeupdate-使用场景","link":"#getsnapshotbeforeupdate-使用场景","children":[]}]},{"level":2,"title":"key 的作用","slug":"key-的作用","link":"#key-的作用","children":[]}],"git":{"createdTime":1655200609000,"updatedTime":1655286810000,"contributors":[{"name":"shiki","email":"kamiacgxu@gmail.com","commits":2}]},"readingTime":{"minutes":11.33,"words":3400},"filePathRelative":"framework_front/react/basic_use.md","localizedDate":"2022年6月14日","excerpt":"\\n<h2>虚拟<code>DOM</code></h2>\\n<p>虚拟 DOM 的两种创建方式:</p>\\n<p>1.使用 jsx 创建</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"jsx\\" data-title=\\"jsx\\" style=\\"background-color:#2e3440ff;color:#d8dee9ff\\"><pre class=\\"shiki nord vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#81A1C1\\">const</span><span style=\\"color:#D8DEE9\\"> VDOM</span><span style=\\"color:#616E88\\"> /* 此处一定不要写引号，因为不是字符串 */</span><span style=\\"color:#81A1C1\\"> =</span><span style=\\"color:#D8DEE9FF\\"> (</span></span>\\n<span class=\\"line\\"><span style=\\"color:#81A1C1\\">  &lt;h1</span><span style=\\"color:#8FBCBB\\"> id</span><span style=\\"color:#81A1C1\\">=</span><span style=\\"color:#ECEFF4\\">\\"</span><span style=\\"color:#A3BE8C\\">title</span><span style=\\"color:#ECEFF4\\">\\"</span><span style=\\"color:#81A1C1\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#81A1C1\\">    &lt;span&gt;</span><span style=\\"color:#D8DEE9FF\\">Hello,React</span><span style=\\"color:#81A1C1\\">&lt;/span&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#81A1C1\\">  &lt;/h1&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D8DEE9FF\\">)</span><span style=\\"color:#81A1C1\\">;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')},8538:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,l]of n)a[s]=l;return a}}}]);