"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[1289],{4493:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>h});var n=a(7829);const t=[(0,n.Fv)('<h1 id="internationalization-support" tabindex="-1"><a class="header-anchor" href="#internationalization-support"><span><a href="https://nodejs.org/docs/latest/api/intl.html#internationalization-support" target="_blank" rel="noopener noreferrer">Internationalization support</a></span></a></h1><p>国际化（Internationalization），常缩写为i18n（因为从字母i到n之间有18个字母），在软件开发中是指让你的应用支持多种语言和地区，而不需要为每一种语言或地区重新设计或编写你的应用程序。这对于创建全球可用的软件非常重要。</p><p>Node.js通过<code>Intl</code>对象提供内置的国际化支持，这是ECMAScript Internationalization API的一部分。这意味着你可以在Node.js中处理日期、时间、数字以及字符串比较等，这些都会根据不同的语言和地区进行适当的格式化和排序。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>让我们通过几个实际的例子来看看Node.js中的国际化支持如何工作：</p><h4 id="_1-日期和时间的格式化" tabindex="-1"><a class="header-anchor" href="#_1-日期和时间的格式化"><span>1. 日期和时间的格式化</span></a></h4><p>假设你正在开发一个全球性的网站，需要显示当前的日期和时间。在美国，日期格式通常是月/日/年，而在大多数欧洲国家，则是日/月/年。使用Node.js的<code>Intl.DateTimeFormat</code>，你可以轻松地根据用户的地区来格式化日期。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> now</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 美国英语格式</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;en-US&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出可能是 &quot;4/5/2023&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 德国德语格式</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;de-DE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出可能是 &quot;05.04.2023&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-数字的格式化" tabindex="-1"><a class="header-anchor" href="#_2-数字的格式化"><span>2. 数字的格式化</span></a></h4><p>当你想要在不同国家展示价格或其他数字时，格式也会有所不同。例如，北美地区使用逗号作为千位分隔符，而大多数欧洲国家使用点或空格。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1234567.89</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 美国英语格式</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">NumberFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;en-US&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出 &quot;1,234,567.89&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 法国法语格式</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">NumberFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;fr-FR&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出 &quot;1 234 567,89&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-比较字符串" tabindex="-1"><a class="header-anchor" href="#_3-比较字符串"><span>3. 比较字符串</span></a></h4><p>在不同的语言中，字符排序规则会有所不同。例如，在瑞典语中，&quot;ä&quot; 被视为字母表中最后的字母之一，但在其他语言中可能不是。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> names</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;äpple&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;banana&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;cherry&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 英语排序</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">names</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Collator</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出 [&quot;banana&quot;, &quot;cherry&quot;, &quot;äpple&quot;]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 瑞典语排序</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">names</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Collator</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;sv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出 [&quot;banana&quot;, &quot;cherry&quot;, &quot;äpple&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过这些例子，你可以看到Node.js中的国际化支持如何帮助你创建可以自然地适应不同语言和文化的全球应用。无论是格式化日期和时间、处理数字还是比较字符串，<code>Intl</code>对象都为你提供了强大的工具。这样，你可以专注于创建出色的功能，而不必担心国际化的复杂性。</p><h2 id="options-for-building-node-js" tabindex="-1"><a class="header-anchor" href="#options-for-building-node-js"><span><a href="https://nodejs.org/docs/latest/api/intl.html#options-for-building-nodejs" target="_blank" rel="noopener noreferrer">Options for building Node.js</a></span></a></h2><p>在Node.js中，构建选项允许你定制Node.js的安装，特别是在国际化（国际化是指软件产品能够适应不同地区、语言和文化的能力）方面。Node.js使用了一个名为ICU（International Components for Unicode）的库来实现国际化功能，这个库提供了对Unicode的支持，日期、时间、数字的格式化和解析，以及双向文本等功能。根据你的应用需求，可能需要对这部分功能进行定制。下面是在Node.js v21.7.1版本中，与构建Node.js相关的几个选项，以及它们的实际应用例子：</p><ol><li><p><strong>小型ICU（Small-ICU）</strong>：默认情况下，Node.js可能只包含英语或者一小部分语言的ICU数据，这被称为小型ICU。如果你的应用主要是面向英语用户，并且你想减少Node.js的安装大小，这是一个很好的选择。</p><p>实际应用例子：一个仅面向英语国家用户的小型Web应用或API服务，可以选择小型ICU，从而减少部署大小和内存占用。</p></li><li><p><strong>完整ICU（Full-ICU）</strong>：如果你希望你的应用支持多种语言，你可以在构建Node.js时选择包含完整的ICU数据。这样，你的应用就能够支持全球数百种语言的日期、时间和数字格式化等功能。</p><p>实际应用例子：一个全球化电商平台需要支持多种语言，以便在不同国家展示产品价格、日期和促销信息，这就需要构建时选择完整ICU。</p></li><li><p><strong>使用系统ICU</strong>：如果你的系统（如Linux发行版）已经安装了ICU，并且是最新或兼容版本，你可以配置Node.js在运行时使用系统ICU而不是内嵌的ICU。这可以帮助减少Node.js的安装大小，并利用系统级的更新和安全补丁。</p><p>实际应用例子：在一些企业级部署中，系统管理员可能更倾向于管理系统级别的库，以确保所有应用都使用最新的安全补丁。在这种情况下，使用系统ICU会是一个更好的选择。</p></li><li><p><strong>Intl API的扩展</strong>：Node.js通过ICU库提供了ECMAScript Internationalization API (Intl) 的实现。你可以根据需要在构建Node.js时选择启用或禁用特定的Intl API特性。</p><p>实际应用例子：如果你正在开发一个需要进行复杂货币计算和展示的金融分析工具，可能会依赖Intl API提供的货币格式化功能。在这种情况下，确保构建Node.js时启用了这些特性会很重要。</p></li></ol><p>理解这些构建选项和它们的实际应用对于开发能够高效运行在不同国家和文化环境中的Node.js应用至关重要。这不仅可以帮助提升用户体验，还可以确保应用的功能在全球范围内的一致性和可用性。</p><h3 id="disable-all-internationalization-features-none" tabindex="-1"><a class="header-anchor" href="#disable-all-internationalization-features-none"><span><a href="https://nodejs.org/docs/latest/api/intl.html#disable-all-internationalization-features-none" target="_blank" rel="noopener noreferrer">Disable all internationalization features (none)</a></span></a></h3><p>Node.js的国际化功能主要是指那些支持多种语言和地区设置的功能，比如日期、时间、货币格式的本地化，以及字符串的国际化处理等。这些功能对于开发需要在全球范围内使用的应用程序非常重要，因为它们能够让应用程序根据用户的地理位置和语言偏好来调整显示的信息。</p><p>然而，在某些情况下，你可能不需要这些国际化功能，或者为了简化你的应用程序、减少内存使用或提升性能，你可能想要禁用它们。在Node.js v21.7.1版本中，提供了一个选项来禁用所有的国际化功能，即通过设置一个特定的编译选项（none）。</p><p>这是一个比较高级和特殊的用法，一般来说，新手可能不太需要直接接触到这个功能。但是了解它存在，并知道如何在需要的时候使用它，是很有帮助的。</p><p>举个例子：</p><ol><li><p><strong>性能优化</strong>：如果你的Node.js应用程序主要针对一个语言区域，且不需要国际化支持，禁用这些功能可以减少Node.js运行时的内存占用和提升启动速度。</p></li><li><p><strong>简化部署</strong>：在某些环境中，可能由于硬件资源限制，你希望尽可能减少应用的复杂度和资源占用。在这种情况下，去除不必要的国际化支持可以是一个选项。</p></li></ol><p>要禁用所有国际化功能，你需要在编译Node.js的时候设置<code>--with-intl=none</code>选项。这意味着你需要从源代码编译Node.js，而不是直接使用预编译的二进制文件。这个过程比较复杂，通常只有对Node.js的构建和部署有深入了解的开发者才需要进行。</p><p>简单来说，这个功能让有特定需求的开发者能够优化他们的Node.js应用程序，虽然对于大多数应用和开发者来说，默认的国际化支持就已经足够好了。</p><h3 id="build-with-a-pre-installed-icu-system-icu" tabindex="-1"><a class="header-anchor" href="#build-with-a-pre-installed-icu-system-icu"><span><a href="https://nodejs.org/docs/latest/api/intl.html#build-with-a-pre-installed-icu-system-icu" target="_blank" rel="noopener noreferrer">Build with a pre-installed ICU (system-icu)</a></span></a></h3><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，让你可以在服务器端运行 JavaScript 代码。Node.js 版本 21.7.1 中的 &quot;Build with a pre-installed ICU (system-icu)&quot; 是一个与国际化（Internationalization，简称 i18n）相关的特性。ICU 代表国际组件库（International Components for Unicode），是一个广泛使用的国际化库，提供了 Unicode 和全球化支持，如字符编码转换、日期/时间格式化、复数和性别规则处理等。</p><p>在 Node.js 中，ICU 使得处理多语言内容变得更加简单。默认情况下，Node.js 会内置一个较小的 ICU 数据集，以支持一些基本的国际化功能。但是，如果你需要更全面的国际化支持（例如，更多语言的日期格式化、货币格式化等），你可能需要使用一个预安装的、更完整的 ICU 库。</p><h3 id="实际运用的例子" tabindex="-1"><a class="header-anchor" href="#实际运用的例子"><span>实际运用的例子：</span></a></h3><ol><li><p><strong>日期格式化</strong>：如果你的应用程序需要支持多种语言环境，显示对应语言的日期格式。使用系统 ICU，你可以很容易地按照用户的语言偏好来格式化日期。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 假设系统 ICU 支持德语和中文</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> dateFormatterDE</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;de-DE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">dateFormatterDE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">())); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出德语日期格式</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>// The document is from Ying Chao <a href="http://Tea.Do" target="_blank" rel="noopener noreferrer">Tea.Do</a> not use for commercial purposes.<br> const dateFormatterZH = new DateTimeFormat(&#39;zh-CN&#39;);<br> console.log(dateFormatterZH.format(new Date())); // 输出中文日期格式</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span></span></span>\n<span class="line"><span>2. **货币格式化**：在显示产品价格时，根据不同国家显示不同的货币格式。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>```javascript</span></span>\n<span class="line"><span>const { NumberFormat } = Intl;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>const priceFormatterUS = new NumberFormat(&#39;en-US&#39;, { style: &#39;currency&#39;, currency: &#39;USD&#39; });</span></span>\n<span class="line"><span>console.log(priceFormatterUS.format(1234567.89)); // &quot;$1,234,567.89&quot;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>const priceFormatterJP = new NumberFormat(&#39;ja-JP&#39;, { style: &#39;currency&#39;, currency: &#39;JPY&#39; });</span></span>\n<span class="line"><span>console.log(priceFormatterJP.format(1234567.89)); // &quot;￥1,234,568&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><p><strong>字符串比较</strong>：在进行字符串排序时，考虑到不同语言的字符排序规则，系统 ICU 能提供正确的字符串比较机制。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Collator</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> collator</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Collator</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;de&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> words</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ä&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;z&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">];</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">words</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">collator</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">words</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出按德语排序的字符 [&quot;a&quot;, &quot;ä&quot;, &quot;z&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>使用系统预安装的 ICU 而不是 Node.js 内置的小型 ICU，可以让你的应用更好地支持多语言环境，为全球用户提供更佳的体验。要启用这个功能，你可能需要在编译 Node.js 时指定使用系统 ICU，或者通过配置来指定使用系统级别的 ICU 库。</p><h3 id="embed-a-limited-set-of-icu-data-small-icu" tabindex="-1"><a class="header-anchor" href="#embed-a-limited-set-of-icu-data-small-icu"><span><a href="https://nodejs.org/docs/latest/api/intl.html#embed-a-limited-set-of-icu-data-small-icu" target="_blank" rel="noopener noreferrer">Embed a limited set of ICU data (small-icu)</a></span></a></h3><p>在Node.js中，ICU（International Components for Unicode）是一个非常重要的组件，用于提供国际化支持。这意味着借助ICU，Node.js可以处理不同语言和地区的数据，如日期、时间、数字的格式化和解析，以及字符串的比较和转换等。</p><p>在Node.js的v21.7.1版本中，<code>small-icu</code>提供了一种方式来嵌入一套有限的ICU数据。这是因为完整的ICU数据集非常庞大，而在很多应用场景中，我们只需要支持少数几种语言，而不是全部。通过使用<code>small-icu</code>，我们可以显著减小Node.js应用的体积，同时仍然保留对国际化的基本支持。</p><h3 id="实际运用的例子-1" tabindex="-1"><a class="header-anchor" href="#实际运用的例子-1"><span>实际运用的例子</span></a></h3><ol><li><p><strong>全球化的Web应用</strong>：假设你正在开发一个全球化的网站，需要支持英语和中文。你可以使用<code>small-icu</code>来嵌入这两种语言的数据，从而在不显著增加应用体积的情况下，实现日期和时间的正确格式化展示。</p></li><li><p><strong>命令行工具</strong>：如果你正在开发一个命令行工具，该工具需要在不同地区根据用户的语言偏好来显示信息。通过使用<code>small-icu</code>，你可以选择性地包含几种主要的语言支持，以确保工具能够在不增加太多额外负担的情况下，正确地显示地区特定的日期、时间和数字格式。</p></li><li><p><strong>企业级应用</strong>：在企业级应用中，通常需要对来自不同地区的数据进行处理和分析。使用<code>small-icu</code>可以帮助应用在处理特定地区的数据时，正确地进行格式化和解析，同时避免将整个ICU数据集包含在应用中，这对于维持应用的轻量化和高效运行至关重要。</p></li></ol><h3 id="如何使用small-icu" tabindex="-1"><a class="header-anchor" href="#如何使用small-icu"><span>如何使用<code>small-icu</code></span></a></h3><p>在Node.js中使用<code>small-icu</code>通常涉及到在编译Node.js时，使用特定的配置选项来指定包含哪些语言的ICU数据。这样，当你的应用运行时，它将只能支持那些已经嵌入的语言。这对于开发者来说，意味着需要在开发初期就明确哪些语言是应用必须支持的，以确保选择正确的ICU数据集。</p><p>总的来说，<code>small-icu</code>为Node.js应用提供了一种高效的方式来支持国际化，使得开发者可以根据自己的需要，灵活选择支持的语言范围，从而在保持应用轻量化的同时，不牺牲国际化的能力。</p><h4 id="providing-icu-data-at-runtime" tabindex="-1"><a class="header-anchor" href="#providing-icu-data-at-runtime"><span><a href="https://nodejs.org/docs/latest/api/intl.html#providing-icu-data-at-runtime" target="_blank" rel="noopener noreferrer">Providing ICU data at runtime</a></span></a></h4><p>在 Node.js v21.7.1 中，ICU（International Components for Unicode）数据的运行时提供功能允许你在应用程序运行时动态地加载 ICU 数据。这意味着，你可以根据需要加载特定的国际化支持数据，而不是在构建 Node.js 时就包含所有可能的 ICU 数据。这样做的好处包括减少内存使用和应用程序的体积，以及提供更灵活的国际化支持。</p><h3 id="为什么重要" tabindex="-1"><a class="header-anchor" href="#为什么重要"><span>为什么重要？</span></a></h3><p>在全球化的应用开发中，支持多种语言和区域设置变得越来越重要。ICU 是一个常用于提供这种支持的库，因为它包含了大量的语言和文化规范数据。然而，全面支持所有语言和区域设置需要大量的数据，这可能会不必要地增加应用程序的大小和内存占用。</p><h3 id="实际运用例子" tabindex="-1"><a class="header-anchor" href="#实际运用例子"><span>实际运用例子</span></a></h3><ol><li><p><strong>按需加载语言包：</strong> 假设你正在开发一个多语言的网站，你可以根据用户的偏好或浏览器设置，只加载用户需要的语言数据。比如，如果一个用户指定他们偏好中文，你的应用可以在运行时仅加载中文的 ICU 数据，而不是所有支持的语言。</p></li><li><p><strong>动态国际化支持：</strong> 在一个全球化的电商平台，你可能需要根据用户的地理位置显示不同的货币和日期格式。通过在运行时提供 ICU 数据，你的应用可以根据用户的位置动态地调整这些设置，而无需重启或重新部署。</p></li><li><p><strong>减少应用体积：</strong> 如果你的应用只需要支持几种语言，则无需在构建时包含对所有语言的支持。通过在运行时加载所需的 ICU 数据，你可以显著减少应用的初始下载大小，使得首次加载速度更快。</p></li></ol><h3 id="如何实现" tabindex="-1"><a class="header-anchor" href="#如何实现"><span>如何实现？</span></a></h3><p>在 Node.js 中，你可以使用 <code>full-icu</code> 包或通过 Node.js 的 <code>--icu-data-dir</code> 选项指定一个包含 ICU 数据的目录来动态加载 ICU 数据。这意味着你需要在你的应用初始化过程中确定哪些国际化数据是必需的，并确保这些数据在使用前被加载。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 示例：动态加载ICU数据</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> icuDataDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;/path/to/icu/data/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">NODE_ICU_DATA</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> icuDataDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 设置环境变量以指定ICU数据目录</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 然后，你可以正常使用国际化功能，如 Intl.DateTimeFormat 等</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方法使得 Node.js 应用更加灵活，能够更好地适应多语言环境的需求，同时也优化了性能和资源利用。</p><h3 id="embed-the-entire-icu-full-icu" tabindex="-1"><a class="header-anchor" href="#embed-the-entire-icu-full-icu"><span><a href="https://nodejs.org/docs/latest/api/intl.html#embed-the-entire-icu-full-icu" target="_blank" rel="noopener noreferrer">Embed the entire ICU (full-icu)</a></span></a></h3><p>首先，让我们理解一下什么是ICU。ICU代表“国际化组件Unicode（International Components for Unicode）”，它是一套广泛使用的库，用于支持软件的国际化，比如处理多种语言文本、日期、时间格式等。</p><p>Node.js作为一个JavaScript运行环境，默认包含了一部分ICU功能，称之为“small-icu”。这就像是ICU的一个简化版本，能够满足基本的国际化需求，例如格式化日期和数字等。但是，对于更复杂的国际化需求，比如支持多种不同语言的排序、搜索以及额外的日期、数字格式化选项，这时候你就需要完整版的ICU了。</p><h3 id="embed-the-entire-icu-full-icu-1" tabindex="-1"><a class="header-anchor" href="#embed-the-entire-icu-full-icu-1"><span>Embed the entire ICU (full-icu)</span></a></h3><p>当我们谈到在Node.js中嵌入完整的ICU（即full-icu），我们指的是将整个ICU库集成到你的Node.js应用程序中，这样就可以支持更广泛的国际化功能。</p><p>默认情况下，Node.js可能没有包括完整的ICU，因为这会显著增加二进制文件的大小。但是，如果你的应用程序需要丰富的国际化支持，那么添加full-icu就变得非常重要了。</p><h3 id="如何嵌入完整的icu" tabindex="-1"><a class="header-anchor" href="#如何嵌入完整的icu"><span>如何嵌入完整的ICU</span></a></h3><p>在Node.js v21.7.1，你可以通过几种方式来实现这一点:</p><ol><li><p><strong>在编译Node.js时直接嵌入</strong>: 如果你从源代码编译Node.js，可以使用配置选项来嵌入完整的ICU。这通常通过在编译命令中添加<code>--with-intl=full-icu</code>来完成。</p></li><li><p><strong>使用npm包</strong>: 存在一个名为<code>full-icu</code>的npm包，它可以让你在不重新编译Node.js的情况下，将完整的ICU添加到你的项目中。安装该npm包后，你需要设置<code>NODE_ICU_DATA</code>环境变量，使其指向<code>full-icu</code>包提供的数据路径。</p></li></ol><h3 id="实际运用的例子-2" tabindex="-1"><a class="header-anchor" href="#实际运用的例子-2"><span>实际运用的例子</span></a></h3><p>假设你正在开发一个全球化的网站，需要显示多种语言的内容，并且根据用户的地区显示相应的日期、时间格式和货币格式。</p><ol><li><strong>日期格式化</strong>: 在不同的国家/地区，日期的格式有很大差异。使用full-icu，你可以轻松地按照用户的本地习惯格式化日期。</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> formatter</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;de-DE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  year</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;numeric&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  month</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  day</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;numeric&#39;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">});</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">formatter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">())); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出: &quot;9. Oktober 2023&quot;（假设今天是2023年10月9日）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>多语言排序</strong>: 当你的应用需要根据用户的语言偏好来排序字符串时，full-icu提供的本地化字符串比较功能非常有用。</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> names</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Österreich&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Andorra&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Vietnam&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 在德语中排序</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">names</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Collator</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;de&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出: [&#39;Andorra&#39;, &#39;Österreich&#39;, &#39;Vietnam&#39;]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 在越南语中排序</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">names</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Collator</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;vi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出: [&#39;Andorra&#39;, &#39;Vietnam&#39;, &#39;Österreich&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过这些例子，我们可以看到，嵌入完整的ICU为Node.js应用程序提供了强大的国际化支持，让你能够为全球用户创建更友好、更易于本地化的应用体验。</p><h2 id="detecting-internationalization-support" tabindex="-1"><a class="header-anchor" href="#detecting-internationalization-support"><span><a href="https://nodejs.org/docs/latest/api/intl.html#detecting-internationalization-support" target="_blank" rel="noopener noreferrer">Detecting internationalization support</a></span></a></h2><p>在 Node.js v21.7.1 中，<code>intl</code> 模块提供了用于确定环境是否支持国际化（Internationalization，简称 i18n）的功能。国际化是指软件的设计与开发，使其可以适应不同地区的语言和文化。了解你的 Node.js 环境是否支持国际化特别重要，因为这直接影响到你的应用能否正确处理不同地区的日期、时间、货币等。</p><h3 id="如何检测国际化支持" tabindex="-1"><a class="header-anchor" href="#如何检测国际化支持"><span>如何检测国际化支持？</span></a></h3><p>在 Node.js 中，可以通过检查 <code>Intl</code> 对象来确定环境是否支持国际化。<code>Intl</code> 对象是 ECMAScript 国际化 API 的一部分，提供了强大的字符串比较、数字格式化和日期/时间格式化能力。</p><p>以下是几个实用的例子：</p><h4 id="_1-检查基本的国际化支持" tabindex="-1"><a class="header-anchor" href="#_1-检查基本的国际化支持"><span>1. 检查基本的国际化支持</span></a></h4><p>你可以简单地检查 <code>Intl</code> 对象是否存在来确定基本的国际化支持：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Intl</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;undefined&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;国际化支持已启用&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;国际化支持未启用&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-检查特定功能的支持" tabindex="-1"><a class="header-anchor" href="#_2-检查特定功能的支持"><span>2. 检查特定功能的支持</span></a></h4><p>国际化的不同方面（如日期时间格式化、数字格式化）可能需要检查具体的 <code>Intl</code> 对象的子对象，如 <code>Intl.DateTimeFormat</code> 或 <code>Intl.NumberFormat</code>。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">DateTimeFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;undefined&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;支持日期时间格式化&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">NumberFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;undefined&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;支持数字格式化&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-使用国际化功能的例子" tabindex="-1"><a class="header-anchor" href="#_3-使用国际化功能的例子"><span>3. 使用国际化功能的例子</span></a></h4><h5 id="日期时间格式化" tabindex="-1"><a class="header-anchor" href="#日期时间格式化"><span>日期时间格式化</span></a></h5><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> now</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;zh-CN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出类似于 &quot;2021/7/28&quot;，具体格式根据你的环境和语言设置可能不同</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="数字格式化" tabindex="-1"><a class="header-anchor" href="#数字格式化"><span>数字格式化</span></a></h5><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">NumberFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;en-US&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;currency&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">currency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;USD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1234567.89</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 输出 &quot;$1,234,567.89&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="字符串比较-用于排序" tabindex="-1"><a class="header-anchor" href="#字符串比较-用于排序"><span>字符串比较（用于排序）</span></a></h5><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> names</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;李明&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Ángel&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Jörg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">];</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">names</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Intl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Collator</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;zh-CN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 根据中文排序规则对名字进行排序</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h3><p>通过检查 <code>Intl</code> 对象及其子对象，你可以轻松确定 Node.js 环境对国际化的支持程度，并使用其提供的功能来处理多语言环境下的数据格式化和比较。这对开发面向全球用户的应用尤其重要。</p>',90)],l={},e=(0,a(1305).A)(l,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,t)}]]),h=JSON.parse('{"path":"/document/node-doc/Internationalization%20support.html","title":"Internationalization support","lang":"zh-CN","frontmatter":{"article":false,"description":"Internationalization support 国际化（Internationalization），常缩写为i18n（因为从字母i到n之间有18个字母），在软件开发中是指让你的应用支持多种语言和地区，而不需要为每一种语言或地区重新设计或编写你的应用程序。这对于创建全球可用的软件非常重要。 Node.js通过Intl对象提供内置的国际化支持，这...","head":[["meta",{"property":"og:url","content":"https://hanekawa.top/document/node-doc/Internationalization%20support.html"}],["meta",{"property":"og:site_name","content":"hanekawa-shiki"}],["meta",{"property":"og:title","content":"Internationalization support"}],["meta",{"property":"og:description","content":"Internationalization support 国际化（Internationalization），常缩写为i18n（因为从字母i到n之间有18个字母），在软件开发中是指让你的应用支持多种语言和地区，而不需要为每一种语言或地区重新设计或编写你的应用程序。这对于创建全球可用的软件非常重要。 Node.js通过Intl对象提供内置的国际化支持，这..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-21T09:46:17.000Z"}],["meta",{"property":"article:author","content":"hanekawa-shiki"}],["meta",{"property":"article:modified_time","content":"2024-06-21T09:46:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Internationalization support\\",\\"description\\":\\"Internationalization support 国际化（Internationalization），常缩写为i18n（因为从字母i到n之间有18个字母），在软件开发中是指让你的应用支持多种语言和地区，而不需要为每一种语言或地区重新设计或编写你的应用程序。这对于创建全球可用的软件非常重要。 Node.js通过Intl对象提供内置的国际化支持，这...\\"}"]]},"headers":[{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"Options for building Node.js","slug":"options-for-building-node-js","link":"#options-for-building-node-js","children":[{"level":3,"title":"Disable all internationalization features (none)","slug":"disable-all-internationalization-features-none","link":"#disable-all-internationalization-features-none","children":[]},{"level":3,"title":"Build with a pre-installed ICU (system-icu)","slug":"build-with-a-pre-installed-icu-system-icu","link":"#build-with-a-pre-installed-icu-system-icu","children":[]},{"level":3,"title":"实际运用的例子：","slug":"实际运用的例子","link":"#实际运用的例子","children":[]},{"level":3,"title":"Embed a limited set of ICU data (small-icu)","slug":"embed-a-limited-set-of-icu-data-small-icu","link":"#embed-a-limited-set-of-icu-data-small-icu","children":[]},{"level":3,"title":"实际运用的例子","slug":"实际运用的例子-1","link":"#实际运用的例子-1","children":[]},{"level":3,"title":"如何使用small-icu","slug":"如何使用small-icu","link":"#如何使用small-icu","children":[]},{"level":3,"title":"为什么重要？","slug":"为什么重要","link":"#为什么重要","children":[]},{"level":3,"title":"实际运用例子","slug":"实际运用例子","link":"#实际运用例子","children":[]},{"level":3,"title":"如何实现？","slug":"如何实现","link":"#如何实现","children":[]},{"level":3,"title":"Embed the entire ICU (full-icu)","slug":"embed-the-entire-icu-full-icu","link":"#embed-the-entire-icu-full-icu","children":[]},{"level":3,"title":"Embed the entire ICU (full-icu)","slug":"embed-the-entire-icu-full-icu-1","link":"#embed-the-entire-icu-full-icu-1","children":[]},{"level":3,"title":"如何嵌入完整的ICU","slug":"如何嵌入完整的icu","link":"#如何嵌入完整的icu","children":[]},{"level":3,"title":"实际运用的例子","slug":"实际运用的例子-2","link":"#实际运用的例子-2","children":[]}]},{"level":2,"title":"Detecting internationalization support","slug":"detecting-internationalization-support","link":"#detecting-internationalization-support","children":[{"level":3,"title":"如何检测国际化支持？","slug":"如何检测国际化支持","link":"#如何检测国际化支持","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]}],"git":{"createdTime":1718963177000,"updatedTime":1718963177000,"contributors":[{"name":"kamishima-kaede","email":"kamiacgxu@gmail.com","commits":1}]},"readingTime":{"minutes":17.58,"words":5274},"filePathRelative":"document/node-doc/Internationalization support.md","localizedDate":"2024年6月21日","excerpt":"\\n<p>国际化（Internationalization），常缩写为i18n（因为从字母i到n之间有18个字母），在软件开发中是指让你的应用支持多种语言和地区，而不需要为每一种语言或地区重新设计或编写你的应用程序。这对于创建全球可用的软件非常重要。</p>\\n<p>Node.js通过<code>Intl</code>对象提供内置的国际化支持，这是ECMAScript Internationalization API的一部分。这意味着你可以在Node.js中处理日期、时间、数字以及字符串比较等，这些都会根据不同的语言和地区进行适当的格式化和排序。</p>\\n<h3>示例</h3>\\n<p>让我们通过几个实际的例子来看看Node.js中的国际化支持如何工作：</p>","autoDesc":true}')},1305:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}}}]);