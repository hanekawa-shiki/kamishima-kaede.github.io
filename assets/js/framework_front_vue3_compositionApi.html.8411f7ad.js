"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[3841],{648:(a,e,d)=>{d.r(e),d.d(e,{comp:()=>r,data:()=>c});var s=d(9034);const t=d.p+"assets/img/lifecycle_old.4a919f74.png",l=d.p+"assets/img/lifecycle_new.4ee6291c.svg",n=a=>((0,s.Qi)("data-v-b4d75a9e"),a=a(),(0,s.jt)(),a),o=t+"#vueLeft",p=l+"#vueRight",v=[(0,s.Fv)('<h1 id="二、常用-composition-api" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#二、常用-composition-api" data-v-b4d75a9e><span data-v-b4d75a9e>二、常用 Composition API</span></a></h1><p data-v-b4d75a9e>官方文档: <a href="https://v3.cn.vuejs.org/guide/composition-api-introduction.html" target="_blank" rel="noopener noreferrer" data-v-b4d75a9e>https://v3.cn.vuejs.org/guide/composition-api-introduction.html</a></p><h2 id="_1-拉开序幕的setup" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_1-拉开序幕的setup" data-v-b4d75a9e><span data-v-b4d75a9e>1.拉开序幕的setup</span></a></h2><ol data-v-b4d75a9e><li data-v-b4d75a9e>理解：Vue3.0中一个新的配置项，值为一个函数。</li><li data-v-b4d75a9e>setup是所有<strong style="color:#DD5145;" data-v-b4d75a9e>Composition API（组合API）</strong><i style="color:gray;font-weight:bold;" data-v-b4d75a9e>“ 表演的舞台 ”</i>。</li><li data-v-b4d75a9e>组件中所用到的：数据、方法等等，均要配置在setup中。</li><li data-v-b4d75a9e>setup函数的两种返回值： <ol data-v-b4d75a9e><li data-v-b4d75a9e>若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！）</li><li data-v-b4d75a9e><span style="color:#aad;" data-v-b4d75a9e>若返回一个渲染函数：则可以自定义渲染内容。（了解）</span></li></ol></li><li data-v-b4d75a9e>注意点： <ol data-v-b4d75a9e><li data-v-b4d75a9e>尽量不要与Vue2.x配置混用 <ul data-v-b4d75a9e><li data-v-b4d75a9e>Vue2.x配置（data、methos、computed...）中<strong style="color:#DD5145;" data-v-b4d75a9e>可以访问到</strong>setup中的属性、方法。</li><li data-v-b4d75a9e>但在setup中<strong style="color:#DD5145;" data-v-b4d75a9e>不能访问到</strong>Vue2.x配置（data、methos、computed...）。</li><li data-v-b4d75a9e>如果有重名, setup优先。</li></ul></li><li data-v-b4d75a9e>setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）</li></ol></li></ol><h2 id="_2-ref函数" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_2-ref函数" data-v-b4d75a9e><span data-v-b4d75a9e>2.ref函数</span></a></h2><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>作用: 定义一个响应式的数据</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>语法: <code data-v-b4d75a9e>const xxx = ref(initValue)</code></p><ul data-v-b4d75a9e><li data-v-b4d75a9e>创建一个包含响应式数据的<strong style="color:#DD5145;" data-v-b4d75a9e>引用对象（reference对象，简称ref对象）</strong>。</li><li data-v-b4d75a9e>JS中操作数据： <code data-v-b4d75a9e>xxx.value</code></li><li data-v-b4d75a9e>模板中读取数据: 不需要.value，直接：</li></ul><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="background-color:#2e3440ff;color:#d8dee9ff;" data-v-b4d75a9e><pre class="shiki nord vp-code" data-v-b4d75a9e><code data-v-b4d75a9e><span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>  &lt;div&gt;</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>{{xxx}}</span><span style="color:#81A1C1;" data-v-b4d75a9e>&lt;/div&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b4d75a9e><div class="line-number" data-v-b4d75a9e></div></div></div></li><li data-v-b4d75a9e><p data-v-b4d75a9e>备注：</p><ul data-v-b4d75a9e><li data-v-b4d75a9e>接收的数据可以是：基本类型、也可以是对象类型。</li><li data-v-b4d75a9e>基本类型的数据：响应式依然是靠<code data-v-b4d75a9e>Object.defineProperty()</code>的<code data-v-b4d75a9e>get</code>与<code data-v-b4d75a9e>set</code>完成的。</li><li data-v-b4d75a9e>对象类型的数据：内部 <i style="color:gray;font-weight:bold;" data-v-b4d75a9e>“ 求助 ”</i> 了Vue3.0中的一个新函数—— <code data-v-b4d75a9e>reactive</code>函数。</li></ul></li></ul><h2 id="_3-reactive函数" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_3-reactive函数" data-v-b4d75a9e><span data-v-b4d75a9e>3.reactive函数</span></a></h2><ul data-v-b4d75a9e><li data-v-b4d75a9e>作用: 定义一个<strong style="color:#DD5145;" data-v-b4d75a9e>对象类型</strong>的响应式数据（基本类型不要用它，要用<code data-v-b4d75a9e>ref</code>函数）</li><li data-v-b4d75a9e>语法：<code data-v-b4d75a9e>const 代理对象= reactive(源对象)</code>接收一个对象（或数组），返回一个<strong style="color:#DD5145;" data-v-b4d75a9e>代理对象（Proxy的实例对象，简称proxy对象）</strong></li><li data-v-b4d75a9e>reactive定义的响应式数据是“深层次的”。</li><li data-v-b4d75a9e>内部基于 ES6 的 Proxy 实现，通过代理对象操作源对象内部数据进行操作。</li></ul><h2 id="_4-vue3-0中的响应式原理" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_4-vue3-0中的响应式原理" data-v-b4d75a9e><span data-v-b4d75a9e>4.Vue3.0中的响应式原理</span></a></h2><h3 id="vue2-x的响应式" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#vue2-x的响应式" data-v-b4d75a9e><span data-v-b4d75a9e>vue2.x的响应式</span></a></h3><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>实现原理：</p><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>对象类型：通过<code data-v-b4d75a9e>Object.defineProperty()</code>对属性的读取、修改进行拦截（数据劫持）。</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>数组类型：通过重写更新数组的一系列方法来实现拦截。（对数组的变更方法进行了包裹）。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;" data-v-b4d75a9e><pre class="shiki nord vp-code" data-v-b4d75a9e><code data-v-b4d75a9e><span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>Object</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>defineProperty</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>data</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#ECEFF4;" data-v-b4d75a9e> &#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>count</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#ECEFF4;" data-v-b4d75a9e> {</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>    get</span><span style="color:#ECEFF4;" data-v-b4d75a9e> ()</span><span style="color:#ECEFF4;" data-v-b4d75a9e> {},</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e> </span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>    set</span><span style="color:#ECEFF4;" data-v-b4d75a9e> ()</span><span style="color:#ECEFF4;" data-v-b4d75a9e> {}</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b4d75a9e><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div></div></div></li></ul></li><li data-v-b4d75a9e><p data-v-b4d75a9e>存在问题：</p><ul data-v-b4d75a9e><li data-v-b4d75a9e>新增属性、删除属性, 界面不会更新。</li><li data-v-b4d75a9e>直接通过下标修改数组, 界面不会自动更新。</li></ul></li></ul><h3 id="vue3-0的响应式" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#vue3-0的响应式" data-v-b4d75a9e><span data-v-b4d75a9e>Vue3.0的响应式</span></a></h3><ul data-v-b4d75a9e><li data-v-b4d75a9e>实现原理: <ul data-v-b4d75a9e><li data-v-b4d75a9e>通过Proxy（代理）: 拦截对象中任意属性的变化, 包括：属性值的读写、属性的添加、属性的删除等。</li><li data-v-b4d75a9e>通过Reflect（反射）: 对源对象的属性进行操作。</li><li data-v-b4d75a9e>MDN文档中描述的Proxy与Reflect： <ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank" rel="noopener noreferrer" data-v-b4d75a9e>Proxy</a></p></li><li data-v-b4d75a9e><p data-v-b4d75a9e><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect" target="_blank" rel="noopener noreferrer" data-v-b4d75a9e>Reflect</a></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;" data-v-b4d75a9e><pre class="shiki nord vp-code" data-v-b4d75a9e><code data-v-b4d75a9e><span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>new</span><span style="color:#88C0D0;" data-v-b4d75a9e> Proxy</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>data</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#ECEFF4;" data-v-b4d75a9e> {</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>    //拦截读取属性值</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>    get</span><span style="color:#ECEFF4;" data-v-b4d75a9e> (</span><span style="color:#D8DEE9;" data-v-b4d75a9e>target</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e> prop</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#ECEFF4;" data-v-b4d75a9e> {</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>      return</span><span style="color:#D8DEE9;" data-v-b4d75a9e> Reflect</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>get</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>target</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e> prop</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>    },</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>    // 拦截设置属性值或添加新属性</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>    set</span><span style="color:#ECEFF4;" data-v-b4d75a9e> (</span><span style="color:#D8DEE9;" data-v-b4d75a9e>target</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e> prop</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e> value</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#ECEFF4;" data-v-b4d75a9e> {</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>      return</span><span style="color:#D8DEE9;" data-v-b4d75a9e> Reflect</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>set</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>target</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e> prop</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e> value</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>    },</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>    // 拦截删除属性</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>    deleteProperty</span><span style="color:#ECEFF4;" data-v-b4d75a9e> (</span><span style="color:#D8DEE9;" data-v-b4d75a9e>target</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e> prop</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#ECEFF4;" data-v-b4d75a9e> {</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>      return</span><span style="color:#D8DEE9;" data-v-b4d75a9e> Reflect</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>deleteProperty</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>target</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e> prop</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>    }</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>proxy</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>name</span><span style="color:#81A1C1;" data-v-b4d75a9e> =</span><span style="color:#ECEFF4;" data-v-b4d75a9e> &#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>tom</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b4d75a9e><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div></div></div></li></ul></li></ul></li></ul><h2 id="_5-reactive对比ref" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_5-reactive对比ref" data-v-b4d75a9e><span data-v-b4d75a9e>5.reactive对比ref</span></a></h2><ul data-v-b4d75a9e><li data-v-b4d75a9e>从定义数据角度对比： <ul data-v-b4d75a9e><li data-v-b4d75a9e>ref用来定义：<strong style="color:#DD5145;" data-v-b4d75a9e>基本类型数据</strong>。</li><li data-v-b4d75a9e>reactive用来定义：<strong style="color:#DD5145;" data-v-b4d75a9e>对象（或数组）类型数据</strong>。</li><li data-v-b4d75a9e>备注：ref也可以用来定义<strong style="color:#DD5145;" data-v-b4d75a9e>对象（或数组）类型数据</strong>, 它内部会自动通过<code data-v-b4d75a9e>reactive</code>转为<strong style="color:#DD5145;" data-v-b4d75a9e>代理对象</strong>。</li></ul></li><li data-v-b4d75a9e>从原理角度对比： <ul data-v-b4d75a9e><li data-v-b4d75a9e>ref通过<code data-v-b4d75a9e>Object.defineProperty()</code>的<code data-v-b4d75a9e>get</code>与<code data-v-b4d75a9e>set</code>来实现响应式（数据劫持）。</li><li data-v-b4d75a9e>reactive通过使用<strong style="color:#DD5145;" data-v-b4d75a9e>Proxy</strong>来实现响应式（数据劫持）, 并通过<strong style="color:#DD5145;" data-v-b4d75a9e>Reflect</strong>操作<strong style="color:orange;" data-v-b4d75a9e>源对象</strong>内部的数据。</li></ul></li><li data-v-b4d75a9e>从使用角度对比： <ul data-v-b4d75a9e><li data-v-b4d75a9e>ref定义的数据：操作数据<strong style="color:#DD5145;" data-v-b4d75a9e>需要</strong><code data-v-b4d75a9e>.value</code>，读取数据时模板中直接读取<strong style="color:#DD5145;" data-v-b4d75a9e>不需要</strong><code data-v-b4d75a9e>.value</code>。</li><li data-v-b4d75a9e>reactive定义的数据：操作数据与读取数据：<strong style="color:#DD5145;" data-v-b4d75a9e>均不需要</strong><code data-v-b4d75a9e>.value</code>。</li></ul></li></ul><h2 id="_6-setup的两个注意点" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_6-setup的两个注意点" data-v-b4d75a9e><span data-v-b4d75a9e>6.setup的两个注意点</span></a></h2><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>setup执行的时机</p><ul data-v-b4d75a9e><li data-v-b4d75a9e>在beforeCreate之前执行一次，this是undefined。</li></ul></li><li data-v-b4d75a9e><p data-v-b4d75a9e>setup的参数</p><ul data-v-b4d75a9e><li data-v-b4d75a9e>props：值为对象，包含：组件外部传递过来，且组件内部声明接收了的属性。</li><li data-v-b4d75a9e>context：上下文对象 <ul data-v-b4d75a9e><li data-v-b4d75a9e>attrs: 值为对象，包含：组件外部传递过来，但没有在props配置中声明的属性, 相当于 <code data-v-b4d75a9e>this.$attrs</code>。</li><li data-v-b4d75a9e>slots: 收到的插槽内容, 相当于 <code data-v-b4d75a9e>this.$slots</code>。</li><li data-v-b4d75a9e>emit: 分发自定义事件的函数, 相当于 <code data-v-b4d75a9e>this.$emit</code>。</li></ul></li></ul></li></ul><h2 id="_7-计算属性与监视" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_7-计算属性与监视" data-v-b4d75a9e><span data-v-b4d75a9e>7.计算属性与监视</span></a></h2><h3 id="_1-computed函数" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_1-computed函数" data-v-b4d75a9e><span data-v-b4d75a9e>1.computed函数</span></a></h3><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>与Vue2.x中computed配置功能一致</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>写法</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;" data-v-b4d75a9e><pre class="shiki nord vp-code" data-v-b4d75a9e><code data-v-b4d75a9e><span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>import</span><span style="color:#ECEFF4;" data-v-b4d75a9e> {</span><span style="color:#8FBCBB;" data-v-b4d75a9e>computed</span><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#81A1C1;" data-v-b4d75a9e> from</span><span style="color:#ECEFF4;" data-v-b4d75a9e> &#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>vue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span></span>\n<span class="line" data-v-b4d75a9e></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>setup</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>()</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>    ...</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>  //计算属性——简写</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>    let</span><span style="color:#D8DEE9;" data-v-b4d75a9e> fullName</span><span style="color:#81A1C1;" data-v-b4d75a9e> =</span><span style="color:#88C0D0;" data-v-b4d75a9e> computed</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>()</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>        return</span><span style="color:#D8DEE9;" data-v-b4d75a9e> person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>firstName</span><span style="color:#81A1C1;" data-v-b4d75a9e> +</span><span style="color:#ECEFF4;" data-v-b4d75a9e> &#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>-</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#81A1C1;" data-v-b4d75a9e> +</span><span style="color:#D8DEE9;" data-v-b4d75a9e> person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>lastName</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>    }</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>    //计算属性——完整</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>    let</span><span style="color:#D8DEE9;" data-v-b4d75a9e> fullName</span><span style="color:#81A1C1;" data-v-b4d75a9e> =</span><span style="color:#88C0D0;" data-v-b4d75a9e> computed</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>        get</span><span style="color:#ECEFF4;" data-v-b4d75a9e>(){</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>            return</span><span style="color:#D8DEE9;" data-v-b4d75a9e> person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>firstName</span><span style="color:#81A1C1;" data-v-b4d75a9e> +</span><span style="color:#ECEFF4;" data-v-b4d75a9e> &#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>-</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#81A1C1;" data-v-b4d75a9e> +</span><span style="color:#D8DEE9;" data-v-b4d75a9e> person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>lastName</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>        },</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>        set</span><span style="color:#ECEFF4;" data-v-b4d75a9e>(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>value</span><span style="color:#ECEFF4;" data-v-b4d75a9e>){</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>            const</span><span style="color:#D8DEE9;" data-v-b4d75a9e> nameArr</span><span style="color:#81A1C1;" data-v-b4d75a9e> =</span><span style="color:#D8DEE9;" data-v-b4d75a9e> value</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>split</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>-</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>            person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>firstName</span><span style="color:#81A1C1;" data-v-b4d75a9e> =</span><span style="color:#D8DEE9;" data-v-b4d75a9e> nameArr</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>[</span><span style="color:#B48EAD;" data-v-b4d75a9e>0</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>]</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>            person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>lastName</span><span style="color:#81A1C1;" data-v-b4d75a9e> =</span><span style="color:#D8DEE9;" data-v-b4d75a9e> nameArr</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>[</span><span style="color:#B48EAD;" data-v-b4d75a9e>1</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>]</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>        }</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>    }</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b4d75a9e><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div></div></div></li></ul><h3 id="_2-watch函数" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_2-watch函数" data-v-b4d75a9e><span data-v-b4d75a9e>2.watch函数</span></a></h3><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>与Vue2.x中watch配置功能一致</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>两个小“坑”：</p><ul data-v-b4d75a9e><li data-v-b4d75a9e>监视reactive定义的响应式数据时：oldValue无法正确获取、强制开启了深度监视（deep配置失效）。</li><li data-v-b4d75a9e>监视reactive定义的响应式数据中某个属性时：deep配置有效。</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;" data-v-b4d75a9e><pre class="shiki nord vp-code" data-v-b4d75a9e><code data-v-b4d75a9e><span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>//情况一：监视ref定义的响应式数据</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>watch</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>sum</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>  console</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>log</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>sum变化了</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>},{</span><span style="color:#88C0D0;" data-v-b4d75a9e>immediate</span><span style="color:#ECEFF4;" data-v-b4d75a9e>:</span><span style="color:#81A1C1;" data-v-b4d75a9e>true</span><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>//情况二：监视多个ref定义的响应式数据</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>watch</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>([</span><span style="color:#D8DEE9;" data-v-b4d75a9e>sum</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>msg</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>]</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>  console</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>log</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>sum或msg变化了</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>) </span></span>\n<span class="line" data-v-b4d75a9e></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>/* 情况三：监视reactive定义的响应式数据</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>      若watch监视的是reactive定义的响应式数据，则无法正确获得oldValue！！</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>      若watch监视的是reactive定义的响应式数据，则强制开启了深度监视 </span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>*/</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>watch</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>  console</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>log</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>person变化了</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>},{</span><span style="color:#88C0D0;" data-v-b4d75a9e>immediate</span><span style="color:#ECEFF4;" data-v-b4d75a9e>:</span><span style="color:#81A1C1;" data-v-b4d75a9e>true</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#88C0D0;" data-v-b4d75a9e>deep</span><span style="color:#ECEFF4;" data-v-b4d75a9e>:</span><span style="color:#81A1C1;" data-v-b4d75a9e>false</span><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>) </span><span style="color:#616E88;" data-v-b4d75a9e>//此处的deep配置不再奏效</span></span>\n<span class="line" data-v-b4d75a9e></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>//情况四：监视reactive定义的响应式数据中的某个属性</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>watch</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>()</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#D8DEE9;" data-v-b4d75a9e>person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>job</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>  console</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>log</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>person的job变化了</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>},{</span><span style="color:#88C0D0;" data-v-b4d75a9e>immediate</span><span style="color:#ECEFF4;" data-v-b4d75a9e>:</span><span style="color:#81A1C1;" data-v-b4d75a9e>true</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#88C0D0;" data-v-b4d75a9e>deep</span><span style="color:#ECEFF4;" data-v-b4d75a9e>:</span><span style="color:#81A1C1;" data-v-b4d75a9e>true</span><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>) </span></span>\n<span class="line" data-v-b4d75a9e></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>//情况五：监视reactive定义的响应式数据中的某些属性</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>watch</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>([</span><span style="color:#ECEFF4;" data-v-b4d75a9e>()</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#D8DEE9;" data-v-b4d75a9e>person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>job</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,()</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#D8DEE9;" data-v-b4d75a9e>person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>name</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>]</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>  console</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>log</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>person的job变化了</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>},{</span><span style="color:#88C0D0;" data-v-b4d75a9e>immediate</span><span style="color:#ECEFF4;" data-v-b4d75a9e>:</span><span style="color:#81A1C1;" data-v-b4d75a9e>true</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#88C0D0;" data-v-b4d75a9e>deep</span><span style="color:#ECEFF4;" data-v-b4d75a9e>:</span><span style="color:#81A1C1;" data-v-b4d75a9e>true</span><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e></span>\n<span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>//特殊情况</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>watch</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>()</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#D8DEE9;" data-v-b4d75a9e>person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>job</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,(</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>)</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>    console</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>log</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>person的job变化了</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>newValue</span><span style="color:#ECEFF4;" data-v-b4d75a9e>,</span><span style="color:#D8DEE9;" data-v-b4d75a9e>oldValue</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>},{</span><span style="color:#88C0D0;" data-v-b4d75a9e>deep</span><span style="color:#ECEFF4;" data-v-b4d75a9e>:</span><span style="color:#81A1C1;" data-v-b4d75a9e>true</span><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>) </span><span style="color:#616E88;" data-v-b4d75a9e>//此处由于监视的是reactive素定义的对象中的某个属性，所以deep配置有效</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b4d75a9e><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div></div></div></li></ul><h3 id="_3-watcheffect函数" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_3-watcheffect函数" data-v-b4d75a9e><span data-v-b4d75a9e>3.watchEffect函数</span></a></h3><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>watch的套路是：既要指明监视的属性，也要指明监视的回调。</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>watchEffect的套路是：不用指明监视哪个属性，监视的回调中用到哪个属性，那就监视哪个属性。</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>watchEffect有点像computed：</p><ul data-v-b4d75a9e><li data-v-b4d75a9e>但computed注重的计算出来的值（回调函数的返回值），所以必须要写返回值。</li><li data-v-b4d75a9e>而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;" data-v-b4d75a9e><pre class="shiki nord vp-code" data-v-b4d75a9e><code data-v-b4d75a9e><span class="line" data-v-b4d75a9e><span style="color:#616E88;" data-v-b4d75a9e>//watchEffect所指定的回调中用到的数据只要发生变化，则直接重新执行回调。</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#88C0D0;" data-v-b4d75a9e>watchEffect</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>()</span><span style="color:#81A1C1;" data-v-b4d75a9e>=&gt;</span><span style="color:#ECEFF4;" data-v-b4d75a9e>{</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>    const</span><span style="color:#D8DEE9;" data-v-b4d75a9e> x1</span><span style="color:#81A1C1;" data-v-b4d75a9e> =</span><span style="color:#D8DEE9;" data-v-b4d75a9e> sum</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>value</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#81A1C1;" data-v-b4d75a9e>    const</span><span style="color:#D8DEE9;" data-v-b4d75a9e> x2</span><span style="color:#81A1C1;" data-v-b4d75a9e> =</span><span style="color:#D8DEE9;" data-v-b4d75a9e> person</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#D8DEE9;" data-v-b4d75a9e>age</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#D8DEE9;" data-v-b4d75a9e>    console</span><span style="color:#ECEFF4;" data-v-b4d75a9e>.</span><span style="color:#88C0D0;" data-v-b4d75a9e>log</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>(</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#A3BE8C;" data-v-b4d75a9e>watchEffect配置的回调执行了</span><span style="color:#ECEFF4;" data-v-b4d75a9e>&#39;</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span>\n<span class="line" data-v-b4d75a9e><span style="color:#ECEFF4;" data-v-b4d75a9e>}</span><span style="color:#D8DEE9FF;" data-v-b4d75a9e>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b4d75a9e><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div><div class="line-number" data-v-b4d75a9e></div></div></div></li></ul><h2 id="_8-生命周期" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_8-生命周期" data-v-b4d75a9e><span data-v-b4d75a9e>8.生命周期</span></a></h2>',25),n((()=>(0,s.Lk)("p",null,[(0,s.Lk)("img",{src:o,alt:"vue2.x的生命周期",title:"vue2.x的生命周期",loading:"lazy"}),(0,s.Lk)("br"),(0,s.Lk)("img",{src:p,alt:"vue3.0的生命周期",title:"vue3.0的生命周期",loading:"lazy"})],-1))),(0,s.Fv)('<ul data-v-b4d75a9e><li data-v-b4d75a9e>Vue3.0中可以继续使用Vue2.x中的生命周期钩子，但有有两个被更名： <ul data-v-b4d75a9e><li data-v-b4d75a9e><code data-v-b4d75a9e>beforeDestroy</code>改名为 <code data-v-b4d75a9e>beforeUnmount</code></li><li data-v-b4d75a9e><code data-v-b4d75a9e>destroyed</code>改名为 <code data-v-b4d75a9e>unmounted</code></li></ul></li><li data-v-b4d75a9e>Vue3.0也提供了 Composition API 形式的生命周期钩子，与Vue2.x中钩子对应关系如下： <ul data-v-b4d75a9e><li data-v-b4d75a9e><code data-v-b4d75a9e>beforeCreate</code>===&gt;<code data-v-b4d75a9e>setup()</code></li><li data-v-b4d75a9e><code data-v-b4d75a9e>created</code>=======&gt;<code data-v-b4d75a9e>setup()</code></li><li data-v-b4d75a9e><code data-v-b4d75a9e>beforeMount</code> ===&gt;<code data-v-b4d75a9e>onBeforeMount</code></li><li data-v-b4d75a9e><code data-v-b4d75a9e>mounted</code>=======&gt;<code data-v-b4d75a9e>onMounted</code></li><li data-v-b4d75a9e><code data-v-b4d75a9e>beforeUpdate</code>===&gt;<code data-v-b4d75a9e>onBeforeUpdate</code></li><li data-v-b4d75a9e><code data-v-b4d75a9e>updated</code> =======&gt;<code data-v-b4d75a9e>onUpdated</code></li><li data-v-b4d75a9e><code data-v-b4d75a9e>beforeUnmount</code> ==&gt;<code data-v-b4d75a9e>onBeforeUnmount</code></li><li data-v-b4d75a9e><code data-v-b4d75a9e>unmounted</code> =====&gt;<code data-v-b4d75a9e>onUnmounted</code></li></ul></li></ul><h2 id="_9-自定义hook函数" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_9-自定义hook函数" data-v-b4d75a9e><span data-v-b4d75a9e>9.自定义hook函数</span></a></h2><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>什么是hook？—— 本质是一个函数，把setup函数中使用的Composition API进行了封装。</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>类似于vue2.x中的mixin。</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>自定义hook的优势: 复用代码, 让setup中的逻辑更清楚易懂。</p></li></ul><h2 id="_10-toref" tabindex="-1" data-v-b4d75a9e><a class="header-anchor" href="#_10-toref" data-v-b4d75a9e><span data-v-b4d75a9e>10.toRef</span></a></h2><ul data-v-b4d75a9e><li data-v-b4d75a9e><p data-v-b4d75a9e>作用：创建一个 ref 对象，其value值指向另一个对象中的某个属性。</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>语法：<code data-v-b4d75a9e>const name = toRef(person,&#39;name&#39;)</code></p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>应用: 要将响应式对象中的某个属性单独提供给外部使用时。</p></li><li data-v-b4d75a9e><p data-v-b4d75a9e>扩展：<code data-v-b4d75a9e>toRefs</code> 与<code data-v-b4d75a9e>toRef</code>功能一致，但可以批量创建多个 ref 对象，语法：<code data-v-b4d75a9e>toRefs(person)</code></p></li></ul>',5)],b={},r=(0,d(8538).A)(b,[["render",function(a,e){return(0,s.uX)(),(0,s.CE)("div",null,v)}],["__scopeId","data-v-b4d75a9e"]]),c=JSON.parse('{"path":"/framework_front/vue3/compositionApi.html","title":"二、常用 Composition API","lang":"zh-CN","frontmatter":{"article":false,"description":"二、常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到...","head":[["meta",{"property":"og:url","content":"https://hanekawa.top/framework_front/vue3/compositionApi.html"}],["meta",{"property":"og:site_name","content":"hanekawa-shiki"}],["meta",{"property":"og:title","content":"二、常用 Composition API"}],["meta",{"property":"og:description","content":"二、常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-06-15T09:53:30.000Z"}],["meta",{"property":"article:author","content":"hanekawa-shiki"}],["meta",{"property":"article:modified_time","content":"2022-06-15T09:53:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"二、常用 Composition API\\",\\"description\\":\\"二、常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到...\\"}"]]},"headers":[{"level":2,"title":"1.拉开序幕的setup","slug":"_1-拉开序幕的setup","link":"#_1-拉开序幕的setup","children":[]},{"level":2,"title":"2.ref函数","slug":"_2-ref函数","link":"#_2-ref函数","children":[]},{"level":2,"title":"3.reactive函数","slug":"_3-reactive函数","link":"#_3-reactive函数","children":[]},{"level":2,"title":"4.Vue3.0中的响应式原理","slug":"_4-vue3-0中的响应式原理","link":"#_4-vue3-0中的响应式原理","children":[{"level":3,"title":"vue2.x的响应式","slug":"vue2-x的响应式","link":"#vue2-x的响应式","children":[]},{"level":3,"title":"Vue3.0的响应式","slug":"vue3-0的响应式","link":"#vue3-0的响应式","children":[]}]},{"level":2,"title":"5.reactive对比ref","slug":"_5-reactive对比ref","link":"#_5-reactive对比ref","children":[]},{"level":2,"title":"6.setup的两个注意点","slug":"_6-setup的两个注意点","link":"#_6-setup的两个注意点","children":[]},{"level":2,"title":"7.计算属性与监视","slug":"_7-计算属性与监视","link":"#_7-计算属性与监视","children":[{"level":3,"title":"1.computed函数","slug":"_1-computed函数","link":"#_1-computed函数","children":[]},{"level":3,"title":"2.watch函数","slug":"_2-watch函数","link":"#_2-watch函数","children":[]},{"level":3,"title":"3.watchEffect函数","slug":"_3-watcheffect函数","link":"#_3-watcheffect函数","children":[]}]},{"level":2,"title":"8.生命周期","slug":"_8-生命周期","link":"#_8-生命周期","children":[]},{"level":2,"title":"9.自定义hook函数","slug":"_9-自定义hook函数","link":"#_9-自定义hook函数","children":[]},{"level":2,"title":"10.toRef","slug":"_10-toref","link":"#_10-toref","children":[]}],"git":{"createdTime":1655200609000,"updatedTime":1655286810000,"contributors":[{"name":"shiki","email":"kamiacgxu@gmail.com","commits":2}]},"readingTime":{"minutes":6.74,"words":2022},"filePathRelative":"framework_front/vue3/compositionApi.md","localizedDate":"2022年6月14日","excerpt":"\\n<p>官方文档: <a href=\\"https://v3.cn.vuejs.org/guide/composition-api-introduction.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://v3.cn.vuejs.org/guide/composition-api-introduction.html</a></p>\\n<h2>1.拉开序幕的setup</h2>\\n<ol>\\n<li>理解：Vue3.0中一个新的配置项，值为一个函数。</li>\\n<li>setup是所有<strong style=\\"color:#DD5145\\">Composition API（组合API）</strong><i style=\\"color:gray;font-weight:bold\\">“ 表演的舞台 ”</i>。</li>\\n<li>组件中所用到的：数据、方法等等，均要配置在setup中。</li>\\n<li>setup函数的两种返回值：\\n<ol>\\n<li>若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！）</li>\\n<li><span style=\\"color:#aad\\">若返回一个渲染函数：则可以自定义渲染内容。（了解）</span></li>\\n</ol>\\n</li>\\n<li>注意点：\\n<ol>\\n<li>尽量不要与Vue2.x配置混用\\n<ul>\\n<li>Vue2.x配置（data、methos、computed...）中<strong style=\\"color:#DD5145\\">可以访问到</strong>setup中的属性、方法。</li>\\n<li>但在setup中<strong style=\\"color:#DD5145\\">不能访问到</strong>Vue2.x配置（data、methos、computed...）。</li>\\n<li>如果有重名, setup优先。</li>\\n</ul>\\n</li>\\n<li>setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）</li>\\n</ol>\\n</li>\\n</ol>","autoDesc":true}')},8538:(a,e)=>{e.A=(a,e)=>{const d=a.__vccOpts||a;for(const[a,s]of e)d[a]=s;return d}}}]);