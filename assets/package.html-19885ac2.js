const e=JSON.parse('{"key":"v-53374772","path":"/linux/package.html","title":"","lang":"zh-CN","frontmatter":{"article":false,"description":"应用和包管理 涉及复杂的实现逻辑和复杂多样的需求，一次性实现所有功能几乎是不可能的。为了解决这个问题，高级编程语言都提供一套模块化组织代码的方法，以便将复杂问题拆解成 多个相对简单的子问题，分别实现对应功能，再组合到一起。","head":[["meta",{"property":"og:url","content":"https://hanekawa.top/linux/package.html"}],["meta",{"property":"og:site_name","content":"Kamishima-kaede"}],["meta",{"property":"og:description","content":"应用和包管理 涉及复杂的实现逻辑和复杂多样的需求，一次性实现所有功能几乎是不可能的。为了解决这个问题，高级编程语言都提供一套模块化组织代码的方法，以便将复杂问题拆解成 多个相对简单的子问题，分别实现对应功能，再组合到一起。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T09:52:23.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-17T09:52:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"\\",\\"description\\":\\"应用和包管理 涉及复杂的实现逻辑和复杂多样的需求，一次性实现所有功能几乎是不可能的。为了解决这个问题，高级编程语言都提供一套模块化组织代码的方法，以便将复杂问题拆解成 多个相对简单的子问题，分别实现对应功能，再组合到一起。\\"}"]]},"headers":[{"level":2,"title":"应用和包管理","slug":"应用和包管理","link":"#应用和包管理","children":[]}],"git":{"createdTime":1679046743000,"updatedTime":1679046743000,"contributors":[{"name":"shiki ryougi","email":"shikiryougi@shikideMacBook.local","commits":1}]},"readingTime":{"minutes":0.35,"words":105},"filePathRelative":"linux/package.md","localizedDate":"2023年3月17日","excerpt":"<h2> 应用和包管理</h2>\\n<p>涉及复杂的实现逻辑和复杂多样的需求，一次性实现所有功能几乎是不可能的。为了解决这个问题，高级编程语言都提供一套模块化组织代码的方法，以便将复杂问题拆解成 多个相对简单的子问题，分别实现对应功能，再组合到一起。</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
