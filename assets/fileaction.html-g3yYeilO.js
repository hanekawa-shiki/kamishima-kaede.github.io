import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e as t,b as e,f as p}from"./app-BmsF6tE2.js";const o={},c=e("p",null,"在项目中经常会遇到文件的上传下载需求，在这边总结归纳一下常用的方法。",-1),i=p(`<h2 id="纯前端下载模版文件" tabindex="-1"><a class="header-anchor" href="#纯前端下载模版文件"><span>纯前端下载模版文件</span></a></h2><p>有时我们会遇到偷懒的后端同事，下载简单模板类的需求不愿意写接口，直接甩给前端同事做。对于这种需求也不是很复杂。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getTemplateFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> origin <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>origin
  <span class="token comment">// 假设下载的文件静态路径</span>
  <span class="token keyword">const</span> templateFile <span class="token operator">=</span> <span class="token string">&#39;/template/template.doc&#39;</span>
  <span class="token keyword">const</span> fileUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>origin<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>templateFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
  link<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span>
  link<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">,</span> fileUrl<span class="token punctuation">)</span>
  link<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&#39;下载的文件名&#39;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span>
  link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="通过接口下载文件" tabindex="-1"><a class="header-anchor" href="#通过接口下载文件"><span>通过接口下载文件</span></a></h2><p>1.对于<code>GET</code>请求的接口，最常用的是<code>window.open(url)</code>。</p><p>2.但是对于<code>POST</code>请求就不能直接使用<code>window.open(url)</code>方法了，我们可以利用<code>Blob</code>对象下载文件，通常在项目中封装一个下载文件的方法。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// blob 接口返回的流</span>
<span class="token comment">// fileName 文件名</span>
<span class="token comment">// evt 文件扩展名</span>
<span class="token keyword">const</span> handleBlobData <span class="token operator">=</span> <span class="token punctuation">(</span>blob<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> evt <span class="token operator">=</span> <span class="token string">&#39;pdf&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
  a<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token string">&#39;display: none&#39;</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
  a<span class="token punctuation">.</span>href <span class="token operator">=</span> url
  <span class="token keyword">const</span> name <span class="token operator">=</span> fileName <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>evt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;YYYY-MM-DD_HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>evt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  a<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 关于文件名,一般在响应头回有返回</span>
<span class="token keyword">const</span> fileNameEncode <span class="token operator">=</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-disposition&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;filename=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> fileName <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>fileNameEncode<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function l(u,r){return a(),s("div",null,[c,t(" more "),i])}const m=n(o,[["render",l],["__file","fileaction.html.vue"]]),v=JSON.parse('{"path":"/workRecord/fileaction.html","title":"前端上传下载文件","lang":"zh-CN","frontmatter":{"title":"前端上传下载文件","icon":"linux","category":"前端","tag":["js"],"isOriginal":true,"date":"2023-03-10T00:00:00.000Z","description":"在项目中经常会遇到文件的上传下载需求，在这边总结归纳一下常用的方法。 纯前端下载模版文件 有时我们会遇到偷懒的后端同事，下载简单模板类的需求不愿意写接口，直接甩给前端同事做。对于这种需求也不是很复杂。 通过接口下载文件 1.对于GET请求的接口，最常用的是window.open(url)。 2.但是对于POST请求就不能直接使用window.open(...","head":[["meta",{"property":"og:url","content":"https://hanekawa.top/workRecord/fileaction.html"}],["meta",{"property":"og:site_name","content":"Kamishima-kaede"}],["meta",{"property":"og:title","content":"前端上传下载文件"}],["meta",{"property":"og:description","content":"在项目中经常会遇到文件的上传下载需求，在这边总结归纳一下常用的方法。 纯前端下载模版文件 有时我们会遇到偷懒的后端同事，下载简单模板类的需求不愿意写接口，直接甩给前端同事做。对于这种需求也不是很复杂。 通过接口下载文件 1.对于GET请求的接口，最常用的是window.open(url)。 2.但是对于POST请求就不能直接使用window.open(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-21T10:01:57.000Z"}],["meta",{"property":"article:author","content":"kamishima-kaede"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:published_time","content":"2023-03-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-21T10:01:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端上传下载文件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-21T10:01:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kamishima-kaede\\",\\"url\\":\\"https://hanekawa.top\\"}]}"]]},"headers":[{"level":2,"title":"纯前端下载模版文件","slug":"纯前端下载模版文件","link":"#纯前端下载模版文件","children":[]},{"level":2,"title":"通过接口下载文件","slug":"通过接口下载文件","link":"#通过接口下载文件","children":[]}],"git":{"createdTime":1678631080000,"updatedTime":1679392917000,"contributors":[{"name":"shiki ryougi","email":"shikiryougi@shikideMacBook.local","commits":2}]},"readingTime":{"minutes":1.09,"words":327},"filePathRelative":"workRecord/fileaction.md","localizedDate":"2023年3月10日","excerpt":"<p>在项目中经常会遇到文件的上传下载需求，在这边总结归纳一下常用的方法。</p>\\n","autoDesc":true}');export{m as comp,v as data};
